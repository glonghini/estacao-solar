{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Lens.js","components/Gate.js","components/charts.js","containers/charts.js","components/Camera.js","components/UVIndex.js","components/TempHumi.js","components/SunriseSunset.js","components/WeatherForecast.js","views/Home.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","PageHeader","react_default","a","createElement","href","target","rel","className","src","alt","Lens","props","myDate","Date","getMonth","getDate","time","Gate","isGateOpen","isDaytime","isRaining","console","log","ChartComponent","es","data","chartData","options","Chart","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","dataMatrixTempHumi","dataMatrixUV","firstDaytimePosition","lastDaytimePosition","isTempActive","isHumiActive","isUVActive","is30sActive","is1mActive","is5mActive","is15mActive","is30mActive","is1hActive","timeScaleNow","labels","datasets","label","fontSize","id","backgroundColor","yAxisID","responsive","maintainAspectRatio","scales","xAxes","stacked","yAxes","position","ticks","beginAtZero","gridLines","display","requestTempHumiUV","axios","get","dataDateRequest","then","response","createMatrixUV","refreshData","catch","error","createMatrixTempHumi","setTimeout","getFullYear","string","counter","myArray","replace","split","push","slice","dataTimeScaleBuilder","timeScale","dataName","column","matrix","Math","min","changeDataTemp","returnedValues","forceUpdate","changeDataHumi","dataNow","changeDataUV","changeTimeScale30s","changeTimeScale1m","changeTimeScale5m","changeTimeScale15m","changeTimeScale30m","changeTimeScale1h","inherits","createClass","key","value","width","colSpan","type","onClick","charts_ChartComponent","React","Component","Camera","cameraLink","cameraRefresh","setState","setInterval","height","UVIndex","uvSEL","TempHumi","temperaturaSEL","temperaturaClimatempo","umidadeSEL","umidadeClimatempo","chuvaSEL","SunriseSunset","nascerDoSol","porDoSol","duracaoDoDia","WeatherForecast","cidade","iconManha","iconTarde","iconNoite","frase","align","rowSpan","probabilidadeChuva","precipitacaoChuva","umidadeMax","temperaturaMax","ventoMax","umidadeMin","temperaturaMin","ventoMin","Home","expositionTime","requestClimatempo","temperature","humidity","requestLioSensors","lastTemp","lastHum","round","lastUV","Rain","requestSunriseSunsetTime","sensors","local","sunrise","sunset","open","rain","ExpositionTime","checkDaytime","requestTodayWeatherForecast","name","text_icon","text","pt","date_br","icon","morning","afternoon","night","probability","precipitation","max","wind","velocity_min","velocity_max","todayWeatherForecast","timeNow","getHours","getMinutes","getSeconds","TempHumi_TempHumi","UVIndex_UVIndex","Lens_Lens","Camera_Camera","charts_Chart","WeatherForecast_WeatherForecast","SunriseSunset_SunriseSunset","Gate_Gate","ReactDOM","render","Header_PageHeader","Home_Home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a23a1111.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport const PageHeader = () => {\r\n  return (\r\n    <header>\r\n      <a href=\"http://www.sel.eesc.usp.br/lio/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img className='header' src=\"../images/lab_ocular_portrait.png\" alt=\"LIO logo\"/>\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport const Lens = (props) => {\r\n  //O painel de lentes precisa ser invertido de direção nos dias 14/11 e voltar ao normal dia 27/01, por causa da posição do sol\r\n  //Para isso, adicionamos duas variáveis para esse alerta\r\n  const myDate = new Date();\r\n  //utilizamos o mês 0 porque, para o JavaScript, janeiro é mês 0\r\n  if (myDate.getMonth() === 0){\r\n    if (myDate.getDate() === 24 || myDate.getDate() === 25 || myDate.getDate() === 26 || myDate.getDate() === 27){\r\n      return(\r\n        <div>\r\n          <div className=\"lens-box\">\r\n            <table><tr><th>Tempo total de exposição:</th></tr></table>\r\n            <div className=\"efeito\">{props.time} horas</div>\r\n            <h3> Atenção: girar o painel em direção ao sol no dia 27/01 </h3>\r\n            <h3> Este aviso será mostrado até o dia 27 </h3>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  //utilizamos o mês 10 porque, para o JavaScript, o ano começa no mês 0 (janeiro), e o mês 10 é novembro\r\n  if (myDate.getMonth() === 10){\r\n    if (myDate.getDate() === 11 || myDate.getDate() === 12 || myDate.getDate() === 13 || myDate.getDate() === 14){\r\n      return(\r\n        <div>\r\n          <div className=\"lens-box\">\r\n            <h3><p>Tempo total de exposição:</p></h3>\r\n            <div className=\"efeito\">{props.time} horas</div>\r\n            <div className=\"box-uv uv-index-9\">\r\n              <h3> Atenção: girar o painel em direção ao sol no dia 14/11 </h3>\r\n              <h3> Este aviso será mostrado até o dia 14 </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return(\r\n    <div>\r\n      <div className=\"lens-box\">\r\n        <table><tbody><tr><th>Tempo total de exposição:</th></tr></tbody></table>\r\n        <div className=\"efeito\">{props.time} horas</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Gate = (props) => {\r\n  //condicionais para ativar o alerta de irregularidades com o estado do portão\r\n  //primeiro caso: portão aberto durante a noite\r\n  if (props.isGateOpen){\r\n    if (props.isDaytime === false) {\r\n      return(\r\n        <div>\r\n      \t\t<div className=\"box-alerta-gate\">\r\n            <div className=\"aviso\">!</div>\r\n          </div>\r\n      \t\t<h3>Portão aberto durante a noite</h3>\r\n          <div className=\"gate gate-open\">\r\n            <div className=\"portao\">Aberto</div>\r\n          </div>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  //segundo caso: portão fechado durante o dia\r\n  if (props.isGateOpen === false){\r\n    if (props.isDaytime) {\r\n      //caso esteja chovendo\r\n      if (props.isRaining) {\r\n        return(\r\n          <div>\r\n  \t\t      <div className=\"box-alerta-gate\">\r\n              <div className=\"aviso\">!</div>\r\n            </div>\r\n  \t\t      <h3>Portão fechado durante o dia por causa da chuva</h3>\r\n            <div className=\"gate gate-closed\">\r\n              <div className=\"portao\">Fechado</div>\r\n            </div>\r\n        </div>\r\n        );\r\n      }\r\n      //caso não esteja chovendo\r\n      if (props.isRaining === false) {\r\n        return(\r\n          <div>\r\n            <div className=\"box-alerta-gate\">\r\n              <div className=\"aviso\">!</div>\r\n            </div>\r\n  \t\t      <h3>Portão fechado durante o dia</h3>\r\n            <div className=\"gate gate-closed\">\r\n              <div className=\"portao\">Fechado</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  //terceiro caso: tudo normal durante o dia\r\n  if (props.isGateOpen && props.isDaytime){\r\n    return(\r\n      <div>\r\n        <div className=\"gate gate-open\">\r\n        <div className=\"portao\">Aberto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  //quarto caso: tudo normal durante a noite\r\n  if (props.isGateOpen === false && props.isDaytime === false) {\r\n    return(\r\n      <div>\r\n        <div className=\"gate gate-closed\">\r\n        <div className=\"portao\">Fechado</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  //quinto caso: caso não seja possível saber o estado do portão por falha no request\r\n  console.log('Não foi possível obter o estado do portão');\r\n  return(\r\n    <div>\r\n      <h3>Não foi possível obter o estado do portão</h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport const ChartComponent = (props) => {\r\n  return(\r\n    <div className=\"chart\">\r\n      <Line\r\n        data={props.chartData}\r\n        options={props.chartData.options}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport { ChartComponent } from '../components/charts.js';\r\n\r\nexport class Chart extends React.Component {\r\n  state = {\r\n    //dados para os logs de temperatura\r\n    dataMatrixTempHumi: [],\r\n    dataMatrixUV: [],\r\n    //constantes para verificação do intervalo do dia\r\n    firstDaytimePosition: 0,\r\n    lastDaytimePosition: 0,\r\n    //constantes de estado do gráfico\r\n    isTempActive: true,\r\n    isHumiActive: false,\r\n    isUVActive: true,\r\n    is30sActive: false,\r\n    is1mActive: false,\r\n    is5mActive: false,\r\n    is15mActive: true,\r\n    is30mActive: false,\r\n    is1hActive: false,\r\n    //dataNow: 'Temperatura',\r\n    timeScaleNow: '15m',\r\n    //chart data para ser plotada no gráfico\r\n    chartData: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: 'Temperatura',\r\n          fontSize: 10,\r\n          id: 'y-axis-left',\r\n          data: [],\r\n          backgroundColor: []\r\n        },\r\n        {\r\n          label: 'Umidade',\r\n          yAxisID: 'y-axis-left',\r\n          data: [],\r\n          backgroundColor: []\r\n        },\r\n        {\r\n          label: 'Índice UV',\r\n          yAxisID: 'y-axis-right',\r\n          data: [],\r\n          backgroundColor: []\r\n        }\r\n      ],\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true\r\n          }],\r\n          yAxes: [\r\n            {\r\n              stacked: false,\r\n              position: \"left\",\r\n              id: \"y-axis-left\",\r\n              ticks: {\r\n                beginAtZero: true\r\n              },\r\n              gridLines: {\r\n                 display: false\r\n              }\r\n            },\r\n            {\r\n              stacked: true,\r\n              position: \"right\",\r\n              id: \"y-axis-right\",\r\n              gridLines: {\r\n                 display: false\r\n              }\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //função periódica dos requests\r\n  requestTempHumiUV = () => {\r\n    axios.get('http://143.107.235.2:8000/sensors/files/logsUV/log-' + this.dataDateRequest() + '.txt')\r\n      .then(response => {\r\n        this.createMatrixUV(response.data);\r\n        this.refreshData();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do histórico de temperatura e umidade');\r\n        console.log(error);\r\n      })\r\n    axios.get('http://143.107.235.2:8000/sensors/files/logs/log-' + this.dataDateRequest() + '.txt')\r\n      .then(response => {\r\n        this.createMatrixTempHumi(response.data);\r\n        this.refreshData();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do histórico uv');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.requestTempHumiUV, 30*1000);\r\n  }\r\n  //função para construir a string com a data para os requests do axios\r\n  dataDateRequest = () => {\r\n    const myDate = new Date();\r\n    //verifica-se se o dia e o mês estão entre 1 e 9 para adicionar o 0 antes do dígito\r\n    if (myDate.getDate() < 10) {\r\n      if (myDate.getMonth()+1 < 10) {\r\n        //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n        return('0' + myDate.getDate() + '_0' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n      }\r\n    //verifica-se se somente o dia está entre 1 e 9 para adicionar o 0 antes do dígito\r\n    } else if (myDate.getDate() < 10) {\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return('0' + myDate.getDate() + '_' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    //verifica-se se somente o mês está entre 1 e 9 para adicionar o 0 antes do dígito\r\n    } else if (myDate.getMonth()+1 < 10){\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return(myDate.getDate() + '_0' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    //se nem o dia nem mês estão entre 1 e 9\r\n    } else {\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return(myDate.getDate() + '_' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    }\r\n  }\r\n  //função para criar a matriz com os dados de temperatura\r\n  createMatrixTempHumi = (string) => {\r\n    //função para criar a matrix dos dados recebidos da API\r\n    //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\r\n    //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\r\n    this.state.dataMatrixTempHumi = [];\r\n\r\n    //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\r\n    const myString = string.replace(/\\n/g, '\\t');\r\n\r\n    //separamos todos os valores por tabs\r\n    const myArray = myString.split('\\t');\r\n\r\n    //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\r\n    var counter, chunk = 6;\r\n    for (counter = 0; counter < myArray.length; counter += chunk) {\r\n      this.state.dataMatrixTempHumi.push(myArray.slice(counter, counter + chunk));\r\n    }\r\n  }\r\n  //função para criar a matriz com os dados de indice UV\r\n  createMatrixUV = (string) => {\r\n    //função para criar a matrix dos dados recebidos da API\r\n    //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\r\n    //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\r\n    this.state.dataMatrixUV = [];\r\n\r\n    //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\r\n    const myString = string.replace(/\\n/g, '\\t');\r\n\r\n    //separamos todos os valores por tabs\r\n    const myArray = myString.split('\\t');\r\n\r\n    //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\r\n    var counter, chunk = 12;\r\n    for (counter = 0; counter < myArray.length; counter += chunk) {\r\n      this.state.dataMatrixUV.push(myArray.slice(counter, counter + chunk));\r\n    }\r\n  }\r\n  //função para criar os vetores com os dados a serem mostrados de acordo com a escala de tempo\r\n  dataTimeScaleBuilder = (timeScale, dataName) => {\r\n    //matriz importada do state\r\n    var matrix = [];\r\n\r\n    //vetores para receber os valores tratados\r\n    const label = [];\r\n    const data = [];\r\n\r\n    //counter para os for loops\r\n    var counter = 0;\r\n    var column = 0;\r\n\r\n    //primeiro, importamos a matrix com os dados que queremos para trata-la\r\n    if (dataName === 'Temperatura'){\r\n      this.matrix = this.state.dataMatrixTempHumi;\r\n      column = 3;\r\n    }\r\n    else if(dataName === 'Umidade') {\r\n      this.matrix = this.state.dataMatrixTempHumi;\r\n      column = 4;\r\n    }\r\n    else if (dataName === 'UV') {\r\n      this.matrix = this.state.dataMatrixUV;\r\n      column = 3;\r\n    }\r\n    //segundo, vemos qual posição do vetor o sol ja nasceu e qual posição o sol ja se pôs\r\n    //procurando a primeira posição do dia\r\n    counter = 0;\r\n    while (counter <= this.matrix.length-1) {\r\n      if (this.matrix[counter][0].slice(0, 2) >= 5 && this.matrix[counter][0].slice(0, 2) <= 20) {\r\n        this.state.firstDaytimePosition = counter;\r\n        break;\r\n      } else {\r\n        counter++;\r\n      }\r\n    }\r\n    //procurando a última posição do dia\r\n    counter = 0;\r\n    while (counter <= this.matrix.length-1) {\r\n      if (this.matrix[counter][0].slice(0, 2) >= 20 || counter === this.matrix.length-1) {\r\n        this.state.lastDaytimePosition = counter;\r\n        break;\r\n      } else {\r\n        counter++;\r\n      }\r\n    }\r\n    //checando se houve erro na captura dos dados\r\n    if (this.state.firstDaytimePosition === null) {\r\n      console.log(\"erro na captura dos dados: não houve captura durante o dia\");\r\n    } else if (this.state.lastDaytimePosition === null) {\r\n      console.log(\"erro na captura dos dados: não houve captura durante o dia\");\r\n    }\r\n    //terceiro, tratamos os dados de acordo com a escala do tempo\r\n    if (timeScale === '30s') {\r\n      //timeStep é a variável que vai pegar os pontos em um certo intervalo\r\n      //como nossa primeira escala é de 30s, temos que pegar todos os pontos\r\n      const timeStep = 1;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0]);\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '1m') {\r\n      const timeStep = 2;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '5m') {\r\n      const timeStep = 10;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '15m') {\r\n      const timeStep = 30;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '30m') {\r\n      const timeStep = 60;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '1h') {\r\n      const timeStep = 120;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 2)+'h');\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n\r\n    return [label, data];\r\n  }\r\n  //funções para mudar os dados do gráfico\r\n  changeDataTemp = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Temperatura');\r\n\r\n    if (this.state.isTempActive) {\r\n      this.state.chartData.datasets[0].data = [];\r\n      this.state.chartData.datasets[0].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n      this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\r\n    }\r\n\r\n    this.state.isTempActive = !this.state.isTempActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeDataHumi = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Umidade');\r\n\r\n    if (this.state.isHumiActive) {\r\n      this.state.chartData.datasets[1].data = [];\r\n      this.state.chartData.datasets[1].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n      this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.state.dataNow = 'Umidade';\r\n\r\n    this.state.isHumiActive = !this.state.isHumiActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeDataUV = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'UV')\r\n\r\n    if (this.state.isUVActive) {\r\n      this.state.chartData.datasets[2].data = [];\r\n      this.state.chartData.datasets[2].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n      this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.state.dataNow = 'UV';\r\n\r\n    this.state.isUVActive = !this.state.isUVActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  //funções para mudar a escala de tempo do gráfico\r\n  changeTimeScale30s = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = true;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '30s';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale1m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = true;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '1m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale5m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = true;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '5m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale15m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = true;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '15m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale30m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = true;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '30m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale1h = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = true;\r\n\r\n    this.state.timeScaleNow = '1h';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  //função para atualizar o gráfico junto com os requests\r\n  refreshData = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[0].label = 'Temperatura';\r\n      this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\r\n    }\r\n    if(this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[1].label = 'Umidade';\r\n      this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[2].label = 'Índice UV';\r\n      this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestTempHumiUV();\r\n  }\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div width=\"10%\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"3\">Medida</th>\r\n                <th colSpan=\"6\">Escala de Tempo</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td><input className={this.state.isTempActive ? 'button-temp-chart' : 'button'} value=\"Temperatura\" type=\"button\" onClick={this.changeDataTemp}/></td>\r\n                <td><input className={this.state.isHumiActive ? 'button-humi-chart' : 'button'} value=\"Umidade\" type=\"button\" onClick={this.changeDataHumi}/></td>\r\n                <td><input className={this.state.isUVActive ? 'button-uv-chart' : 'button'} value=\"Índice UV\" type=\"button\" onClick={this.changeDataUV}/></td>\r\n\r\n                <td><input className={this.state.is30sActive ? 'button-time-chart' : 'button'} value=\"30s\" type=\"button\" onClick={this.changeTimeScale30s}/></td>\r\n                <td><input className={this.state.is1mActive ? 'button-time-chart' : 'button'} value=\"1m\" type=\"button\" onClick={this.changeTimeScale1m}/></td>\r\n                <td><input className={this.state.is5mActive ? 'button-time-chart' : 'button'} value=\"5m\" type=\"button\" onClick={this.changeTimeScale5m}/></td>\r\n                <td><input className={this.state.is15mActive ? 'button-time-chart' : 'button'} value=\"15m\" type=\"button\" onClick={this.changeTimeScale15m}/></td>\r\n                <td><input className={this.state.is30mActive ? 'button-time-chart' : 'button'} value=\"30m\" type=\"button\" onClick={this.changeTimeScale30m}/></td>\r\n                <td><input className={this.state.is1hActive ? 'button-time-chart' : 'button'} value=\"1h\" type=\"button\" onClick={this.changeTimeScale1h}/></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      <ChartComponent chartData={this.state.chartData} />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport class Camera extends React.Component {\r\n  state = {\r\n    cameraLink: \"\"\r\n  }\r\n  cameraRefresh = () => {\r\n    this.setState({\r\n      cameraLink: \"http://143.107.235.2:8000/sensors/media\"\r\n    });\r\n    setInterval(this.cameraRefresh, 30*1000);\r\n  }\r\n  componentDidMount(){\r\n    this.cameraRefresh();\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='camera-image'>\r\n        <img\r\n        src={this.state.cameraLink}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        alt=\"camera feed\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport const UVIndex = (props) => {\r\n  if (props.uvSEL <= 1){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-1'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Baixo</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 2){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-2'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Baixo</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 3){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-3'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Médio</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 4){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-4'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Médio</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 5){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-5'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Médio</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 6){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-6'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Alto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 7){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-7'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Alto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 8){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-8'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Muito Alto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 9){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-9'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Muito Alto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL === 10){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-10'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Muito Alto</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  if (props.uvSEL >= 11){\r\n    return(\r\n      <div>\r\n        <div className='box-uv uv-index-11'>\r\n          <div className=\"uv-index-number\">{props.uvSEL}</div>\r\n          <div className=\"uv-index-level\">Extremo</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n","import React from 'react';\r\n\r\nexport const TempHumi = (props) => {\r\n  return (\r\n    <div>\r\n \t    <table>\r\n        <thead>\r\n          <tr>\r\n       \t\t  <td></td>\r\n       \t\t  <th>Estação</th>\r\n       \t\t  <th>Climatempo</th>\r\n       \t  </tr>\r\n        </thead>\r\n        <tbody>\r\n       \t  <tr>\r\n       \t\t  <th><img src=\"../images/thermometer.png\" alt=\"thermometer icon\"/></th>\r\n       \t\t  <td>{props.temperaturaSEL}</td>\r\n       \t\t  <td>{props.temperaturaClimatempo}</td>\r\n       \t  </tr>\r\n       \t  <tr>\r\n       \t\t  <th><img src=\"../images/humidity.png\" alt=\"humidity icon\"/></th>\r\n       \t\t  <td>{props.umidadeSEL}</td>\r\n       \t\t  <td>{props.umidadeClimatempo}</td>\r\n       \t  </tr>\r\n          <tr>\r\n       \t\t  <th><img src=\"../images/rain.png\" alt=\"rain icon\"/></th>\r\n       \t\t  <td>{props.chuvaSEL}</td>\r\n       \t\t  <td></td>\r\n       \t  </tr>\r\n        </tbody>\r\n   \t  </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport const SunriseSunset = (props) => {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th><img src='../../images/sunrise.png' width=\"45%\" alt=\"sunrise icon\"/></th>\r\n            <th><img src='../../images/sunset.png' width=\"45%\" alt=\"sunset icon\"/></th>\r\n            <th>Duração do dia</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{props.nascerDoSol}</td>\r\n            <td>{props.porDoSol}</td>\r\n            <td>{props.duracaoDoDia}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const WeatherForecast = (props) => {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan='3'><h3>{props.cidade}, {props.data}</h3></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td><img src={props.iconManha} alt=\"morning weather forecast\"/></td>\r\n            <td><img src={props.iconTarde} alt=\"afternoon weather forecast\"/></td>\r\n            <td><img src={props.iconNoite} alt=\"night weather forecast\"/></td>\r\n          </tr>\r\n          <tr>\r\n            <td><h3>Manhã</h3></td>\r\n            <td><h3>Tarde</h3></td>\r\n            <td><h3>Noite</h3></td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan='3'><h3>{props.frase}</h3></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <table align=\"center\">\r\n        <thead>\r\n          <tr>\r\n            <th><img src=\"../images/rain.png\" alt=\"rain icon\"/></th>\r\n            <th><img src=\"../images/humidity.png\" alt=\"humidity icon\"/></th>\r\n            <th><img src=\"../images/thermometer.png\" alt=\"thermometer icon\"/></th>\r\n            <th><img src=\"../images/wind.png\" alt=\"wind icon\"/></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td rowSpan=\"2\">{props.probabilidadeChuva}% {props.precipitacaoChuva}mm</td>\r\n            <td>{props.umidadeMax}%</td>\r\n            <td>{props.temperaturaMax}°C</td>\r\n            <td>{props.ventoMax} km/h</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{props.umidadeMin}%</td>\r\n            <td>{props.temperaturaMin}°C</td>\r\n            <td>{props.ventoMin} km/h</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Lens } from '../components/Lens.js';\r\nimport { Gate } from '../components/Gate.js';\r\nimport { Chart } from '../containers/charts.js';\r\nimport { Camera } from '../components/Camera.js';\r\nimport { UVIndex } from '../components/UVIndex.js';\r\n//import { Switch } from '../components/switch.js';\r\nimport { TempHumi } from '../components/TempHumi.js';\r\nimport { SunriseSunset } from '../components/SunriseSunset.js';\r\nimport { WeatherForecast } from '../components/WeatherForecast.js';\r\n\r\nexport class Home extends React.Component {\r\n  state = {\r\n    //constantes para o component TempHumi.js\r\n    temperaturaClimatempo: null,\r\n    umidadeClimatempo: null,\r\n    temperaturaSEL: null,\r\n    umidadeSEL: null,\r\n    uvSEL: null,\r\n    chuvaSEL: null,\r\n    //constantes para o component SunriseSunset.js\r\n    nascerDoSol: null,\r\n    porDoSol: null,\r\n    duracaoDoDia: null,\r\n    //constantes para o component Gate.js\r\n    isGateOpen: null,\r\n    isRaining: null,\r\n    isDaytime: null,\r\n    //constantes para o component Lens.js\r\n    expositionTime: null,\r\n    //constantes para o component WeatherForecast.js\r\n    cidade: null,\r\n    frase: null,\r\n    data: null,\r\n    iconManha: null,\r\n    iconTarde: null,\r\n    iconNoite: null,\r\n    probabilidadeChuva: null,\r\n    precipitacaoChuva: null,\r\n    temperaturaMin: null,\r\n    temperaturaMax: null,\r\n    umidadeMin: null,\r\n    umidadeMax: null,\r\n    ventoMin: null,\r\n    ventoMax: null,\r\n  }\r\n  requestClimatempo = () => {\r\n  //Fetch da API do Climatempo\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/weather/locale/3680/current?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperaturaClimatempo: response.data.data.temperature + '°C',\r\n            umidadeClimatempo: response.data.data.humidity + '%',\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do climatempo');\r\n        console.log(error);\r\n      });\r\n      setTimeout(this.requestClimatempo, 1000*60*5);\r\n  }\r\n  requestLioSensors = () => {\r\n    //Fetch da API do liosensors\r\n    axios.get('http://www.sel.eesc.usp.br/liosensors/json_data.php')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperaturaSEL: response.data.lastTemp + '°C',\r\n            umidadeSEL: response.data.lastHum + '%',\r\n            uvSEL: Math.round(response.data.lastUV),\r\n            chuvaSEL: response.data.Rain\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request dos nossos sensores na SEL');\r\n        console.log(error);\r\n      })\r\n      setTimeout(this.requestLioSensors, 1000*30);\r\n  }\r\n  requestSunriseSunsetTime = () => {\r\n    //utilizando o método get para pegar os dados da API da Beaglebone da SEL\r\n    axios.get('http://143.107.235.2:8000/sensors/data/')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            nascerDoSol: response.data.sensors[0].local.sunrise.slice(10,19),\r\n            porDoSol: response.data.sensors[0].local.sunset.slice(10,19),\r\n            duracaoDoDia: response.data.sensors[0].local.time.slice(10,19),\r\n            isGateOpen: response.data.sensors[0].open,\r\n            isRaining: response.data.sensors[0].rain,\r\n            expositionTime: response.data.sensors[0].ExpositionTime\r\n          }\r\n        );\r\n        //Fiz o checkDaytime() aqui pois é preciso primeiro ter os dados de nascerDoSol e porDoSol para saber se é dia\r\n        this.checkDaytime();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do 143.107.235.2:8000');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.requestSunriseSunsetTime, 30*1000);\r\n  }\r\n  requestTodayWeatherForecast = () =>{\r\n    //utilizando o método get para pegar os dados da API do climatempo\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/forecast/locale/3680/days/15?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            cidade: response.data.name,\r\n            frase: response.data.data[0].text_icon.text.pt,\r\n            data: response.data.data[0].date_br,\r\n            iconManha: \"../images/\" + response.data.data[0].text_icon.icon.morning + \".png\",\r\n            iconTarde: \"../images/\" + response.data.data[0].text_icon.icon.afternoon + \".png\",\r\n            iconNoite: \"../images/\" + response.data.data[0].text_icon.icon.night + \".png\",\r\n            probabilidadeChuva: response.data.data[0].rain.probability,\r\n            precipitacaoChuva: response.data.data[0].rain.precipitation,\r\n            temperaturaMin: response.data.data[0].temperature.min,\r\n            temperaturaMax: response.data.data[0].temperature.max,\r\n            umidadeMin: response.data.data[0].humidity.min,\r\n            umidadeMax: response.data.data[0].humidity.max,\r\n            ventoMin: response.data.data[0].wind.velocity_min,\r\n            ventoMax: response.data.data[0].wind.velocity_max,\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request da previsão do tempo do climatempo');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.todayWeatherForecast, 1000*60*60);\r\n    this.forceUpdate();\r\n  }\r\n  checkDaytime = () => {\r\n    const timeNow = new Date();\r\n    //verificamos se a hora está entre a hora do nascer do sol e a hora do por do sol\r\n    if (timeNow.getHours() > this.state.nascerDoSol.slice(0, 3) && timeNow.getHours() < this.state.porDoSol.slice(0, 3)) {\r\n      this.setState({isDaytime: true});\r\n    }\r\n    //verificamos se a hora é igual a hora do nascer do sol\r\n    if (timeNow.getHours() === this.state.nascerDoSol.slice(0, 3)){\r\n      //verificamos se o minuto é maior ou igual o minuto do nascer do sol\r\n      if (timeNow.getMinutes() > this.state.nascerDoSol.slice(4, 6)){\r\n        this.setState({isDaytime: true});\r\n      }\r\n      //caso o minuto seja igual, verificamos os segundos\r\n      if (timeNow.getMinutes() === this.state.nascerDoSol.slice(4, 6)){\r\n        //caso o segundo seja maior ou igual\r\n        if (timeNow.getSeconds() >= this.state.nascerDoSol.slice(7, 9)){\r\n          this.setState({isDaytime: true});\r\n        }\r\n        //caso o segundo seja menor\r\n        if (timeNow.getSeconds() < this.state.nascerDoSol.slice(7, 9)){\r\n          this.setState({isDaytime: false});\r\n        }\r\n      }\r\n      //caso o minuto seja menor que o do nascer do sol\r\n      if (timeNow.getMinutes() < this.state.nascerDoSol.slice(4, 6)){\r\n        this.setState({isDaytime: false});\r\n      }\r\n    }\r\n    //verificamos se a hora é igual a hora do por do sol\r\n    if(timeNow.getHours() === this.state.porDoSol.slice(0, 3)) {\r\n    //verificamos se o minuto é menor ou igual o minuto do nascer do sol\r\n      if (timeNow.getMinutes() < this.state.porDoSol.slice(4, 6)){\r\n        this.setState({isDaytime: true});\r\n      }\r\n      //caso o minuto seja igual, verificamos os segundos\r\n      if (timeNow.getMinutes() === this.state.porDoSol.slice(4, 6)){\r\n        //caso o segundo seja maior ou igual\r\n        if (timeNow.getSeconds() <= this.state.porDoSol.slice(7, 9)){\r\n          this.setState({isDaytime: true});\r\n        }\r\n        //caso o segundo seja menor\r\n        if (timeNow.getSeconds() > this.state.porDoSol.slice(7, 9)){\r\n          this.setState({isDaytime: false});\r\n        }\r\n      }\r\n      //caso o minuto seja maior que o do nascer do sol\r\n      if (timeNow.getMinutes() > this.state.porDoSol.slice(4, 6)){\r\n        this.setState({isDaytime: false});\r\n      }\r\n    }\r\n    //verificamos se a hora é menor que a hora do nascer do sol ou maior que a hora do por do sol\r\n    if (timeNow.getHours() < this.state.nascerDoSol.slice(0, 3) || timeNow.getHours() > this.state.porDoSol.slice(0, 3)){\r\n      this.setState({isDaytime: false});\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestClimatempo();\r\n    this.requestLioSensors();\r\n    this.requestSunriseSunsetTime();\r\n    this.requestTodayWeatherForecast();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='left-box'>\r\n          <h2>Temperatura e Humidade</h2>\r\n          <TempHumi\r\n            temperaturaClimatempo={this.state.temperaturaClimatempo}\r\n            umidadeClimatempo={this.state.umidadeClimatempo}\r\n            temperaturaSEL={this.state.temperaturaSEL}\r\n            umidadeSEL={this.state.umidadeSEL}\r\n            chuvaSEL={this.state.chuvaSEL}\r\n          />\r\n          <h2>Índice UV</h2>\r\n          <UVIndex\r\n            uvSEL={this.state.uvSEL}\r\n          />\r\n          <h2>Lentes</h2>\r\n          <Lens\r\n            time={this.state.expositionTime}\r\n          />\r\n        </div>\r\n        <div className='center-box'>\r\n          <h2>Câmera e Gráfico</h2>\r\n          <Camera />\r\n          <Chart />\r\n        </div>\r\n        <div className='right-box'>\r\n          <h2>Previsão do Tempo</h2>\r\n          <WeatherForecast\r\n            cidade={this.state.cidade}\r\n            frase={this.state.frase}\r\n            data={this.state.data}\r\n            iconManha={this.state.iconManha}\r\n            iconTarde={this.state.iconTarde}\r\n            iconNoite={this.state.iconNoite}\r\n            probabilidadeChuva={this.state.probabilidadeChuva}\r\n            precipitacaoChuva={this.state.precipitacaoChuva}\r\n            temperaturaMin={this.state.temperaturaMin}\r\n            temperaturaMax={this.state.temperaturaMax}\r\n            umidadeMin={this.state.umidadeMin}\r\n            umidadeMax={this.state.umidadeMax}\r\n            ventoMin={this.state.ventoMin}\r\n            ventoMax={this.state.ventoMax}\r\n          />\r\n          <h2>Nacer e Pôr do Sol</h2>\r\n          <SunriseSunset\r\n            nascerDoSol={this.state.nascerDoSol}\r\n            porDoSol={this.state.porDoSol}\r\n            duracaoDoDia={this.state.duracaoDoDia}\r\n          />\r\n          <h2>Estado do Portão</h2>\r\n          <Gate\r\n            isGateOpen={this.state.isGateOpen}\r\n            isDaytime={this.state.isDaytime}\r\n            isRaining={this.state.isRaining}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './main.css';\r\n\r\nimport { App } from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\nimport { PageHeader } from './components/Header.js';\r\nimport { Home } from './views/Home.js';\r\n\r\nexport const App = () => {\r\n  return(\r\n    <div>\r\n      <PageHeader />\r\n      <Home />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}