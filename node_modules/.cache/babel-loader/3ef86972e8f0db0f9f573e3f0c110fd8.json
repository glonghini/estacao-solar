{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\views\\\\Home.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Camera } from '../components/Camera.js';\nimport { Header } from '../components/Header.js';\nimport { UVIndex } from '../components/UVIndex.js'; //import { Switch } from '../components/switch.js';\n\nimport { TempHumi } from '../components/TempHumi.js';\nimport { SunriseSunset } from '../components/SunriseSunset.js';\nimport { WeatherForecast } from '../components/WeatherForecast.js';\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //constantes para o component TempHumi.js\n      temperaturaClimatempo: null,\n      umidadeClimatempo: null,\n      temperaturaSEL: null,\n      umidadeSEL: null,\n      uvSEL: null,\n      chuvaSEL: null,\n      //constantes para o component SunriseSunset.js\n      nascerDoSol: null,\n      porDoSol: null,\n      duracaoDoDia: null,\n      //constantes para o component Gate.js\n      isGateOpen: null,\n      isRaining: null,\n      expositionTime: null,\n      isDaytime: null,\n      //constantes para o component WeatherForecast.js\n      cidade: null,\n      frase: null,\n      data: null,\n      iconManha: null,\n      iconTarde: null,\n      iconNoite: null,\n      probabilidadeChuva: null,\n      precipitacaoChuva: null,\n      temperaturaMin: null,\n      temperaturaMax: null,\n      umidadeMin: null,\n      umidadeMax: null,\n      ventoMin: null,\n      ventoMax: null\n    };\n\n    _this.requestClimatempo = function () {\n      //Fetch da API do Climatempo\n      axios.get('http://apiadvisor.climatempo.com.br/api/v1/weather/locale/3680/current?token=2e30b5793b0c662d9b901520663bd4d0').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          temperaturaClimatempo: response.data.data.temperature + '°C',\n          umidadeClimatempo: response.data.data.humidity + '%'\n        });\n\n        _this.updateWidgets();\n      }).catch(function (error) {\n        console.log('erro com o request do climatempo');\n        console.log(error);\n      });\n      setTimeout(_this.requestClimatempo, 1000 * 60 * 5);\n    };\n\n    _this.requestLioSensors = function () {\n      //Fetch da API do liosensors\n      axios.get('http://www.sel.eesc.usp.br/liosensors/json_data.php').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          temperaturaSEL: response.data.lastTemp + '°C',\n          umidadeSEL: response.data.lastHum + '%',\n          uvSEL: Math.round(response.data.lastUV),\n          chuvaSEL: response.data.Rain\n        });\n\n        _this.updateWidgets();\n      }).catch(function (error) {\n        console.log('erro com o request dos nossos sensores na SEL');\n        console.log(error);\n      });\n      setTimeout(_this.requestLioSensors, 1000 * 30);\n    };\n\n    _this.requestSunriseSunsetTime = function () {\n      //utilizando o método get para pegar os dados da API da Beaglebone da SEL\n      axios.get('http://143.107.235.2:8000/sensors/data/').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          nascerDoSol: response.data.sensors[0].local.sunrise.slice(10, 19),\n          porDoSol: response.data.sensors[0].local.sunset.slice(10, 19),\n          duracaoDoDia: response.data.sensors[0].local.time.slice(10, 19),\n          isGateOpen: response.data.sensors[0].open,\n          isRaining: response.data.sensors[0].rain,\n          expositionTime: response.data.sensors[0].ExpositionTime,\n          isDaytime: _this.checkDaytime()\n        });\n      }).catch(function (error) {\n        console.log('erro com o request do 143.107.235.2:8000');\n        console.log(error);\n      });\n      setTimeout(_this.requestSunriseSunsetTime, 30 * 1000);\n    };\n\n    _this.requestTodayWeatherForecast = function () {\n      //utilizando o método get para pegar os dados da API do climatempo\n      axios.get('http://apiadvisor.climatempo.com.br/api/v1/forecast/locale/3680/days/15?token=2e30b5793b0c662d9b901520663bd4d0').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          cidade: response.data.name,\n          frase: response.data.data[0].text_icon.text.pt,\n          data: response.data.data[0].date_br,\n          iconManha: \"../images/\" + response.data.data[0].text_icon.icon.morning + \".png\",\n          iconTarde: \"../images/\" + response.data.data[0].text_icon.icon.afternoon + \".png\",\n          iconNoite: \"../images/\" + response.data.data[0].text_icon.icon.night + \".png\",\n          probabilidadeChuva: response.data.data[0].rain.probability,\n          precipitacaoChuva: response.data.data[0].rain.precipitation,\n          temperaturaMin: response.data.data[0].temperature.min,\n          temperaturaMax: response.data.data[0].temperature.max,\n          umidadeMin: response.data.data[0].humidity.min,\n          umidadeMax: response.data.data[0].humidity.max,\n          ventoMin: response.data.data[0].wind.velocity_min,\n          ventoMax: response.data.data[0].wind.velocity_max\n        });\n      }).catch(function (error) {\n        console.log('erro com o request da previsão do tempo do climatempo');\n        console.log(error);\n      });\n      setTimeout(_this.todayWeatherForecast, 1000 * 60 * 60);\n\n      _this.forceUpdate();\n    };\n\n    _this.checkDaytime = function () {\n      var timeNow = new Date(); //verificamos se a hora está entre a hora do nascer do sol e a hora do por do sol\n\n      if (timeNow.getHours() > _this.state.nascerDoSol.slice(0, 3) && timeNow.getHours() < _this.state.porDoSol.slice(0, 3)) {\n        return true;\n      } //verificamos se a hora é igual a hora do nascer do sol\n\n\n      if (timeNow.getHours() === _this.state.nascerDoSol.slice(0, 3)) {\n        //verificamos se o minuto é maior ou igual o minuto do nascer do sol\n        if (timeNow.getMinutes() > _this.state.nascerDoSol.slice(4, 6)) {\n          return true;\n        } //caso o minuto seja igual, verificamos os segundos\n\n\n        if (timeNow.getMinutes() === _this.state.nascerDoSol.slice(4, 6)) {\n          //caso o segundo seja maior ou igual\n          if (timeNow.getSeconds() >= _this.state.nascerDoSol.slice(7, 9)) {\n            return true;\n          } //caso o segundo seja menor\n\n\n          if (timeNow.getSeconds() < _this.state.nascerDoSol.slice(7, 9)) {\n            return false;\n          }\n        } //caso o minuto seja menor que o do nascer do sol\n\n\n        if (timeNow.getMinutes() < _this.state.nascerDoSol.slice(4, 6)) {\n          return false;\n        }\n      } //verificamos se a hora é igual a hora do por do sol\n\n\n      if (timeNow.getHours() === _this.state.porDoSol.slice(0, 3)) {\n        //verificamos se o minuto é menor ou igual o minuto do nascer do sol\n        if (timeNow.getMinutes() < _this.state.porDoSol.slice(4, 6)) {\n          return true;\n        } //caso o minuto seja igual, verificamos os segundos\n\n\n        if (timeNow.getMinutes() === _this.state.porDoSol.slice(4, 6)) {\n          //caso o segundo seja maior ou igual\n          if (timeNow.getSeconds() <= _this.state.porDoSol.slice(7, 9)) {\n            return true;\n          } //caso o segundo seja menor\n\n\n          if (timeNow.getSeconds() > _this.state.porDoSol.slice(7, 9)) {\n            return false;\n          }\n        } //caso o minuto seja maior que o do nascer do sol\n\n\n        if (timeNow.getMinutes() > _this.state.porDoSol.slice(4, 6)) {\n          return false;\n        }\n      } //verificamos se a hora é menor que a hora do nascer do sol ou maior que a hora do por do sol\n\n\n      if (timeNow.getHours() < _this.state.nascerDoSol.slice(0, 3) || timeNow.getHours() > _this.state.porDoSol.slice(0, 3)) {\n        return false;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestClimatempo();\n      this.requestLioSensors();\n      this.requestSunriseSunsetTime();\n      this.requestTodayWeatherForecast();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(TempHumi, {\n        temperaturaClimatempo: this.state.temperaturaClimatempo,\n        umidadeClimatempo: this.state.umidadeClimatempo,\n        temperaturaSEL: this.state.temperaturaSEL,\n        umidadeSEL: this.state.umidadeSEL,\n        chuvaSEL: this.state.chuvaSEL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(UVIndex, {\n        uvSEL: this.state.uvSEL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Lens, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(WeatherForecast, {\n        cidade: this.state.cidade,\n        frase: this.state.frase,\n        data: this.state.data,\n        iconManha: this.state.iconManha,\n        iconTarde: this.state.iconTarde,\n        iconNoite: this.state.iconNoite,\n        probabilidadeChuva: this.state.probabilidadeChuva,\n        precipitacaoChuva: this.state.precipitacaoChuva,\n        temperaturaMin: this.state.temperaturaMin,\n        temperaturaMax: this.state.temperaturaMax,\n        umidadeMin: this.state.umidadeMin,\n        umidadeMax: this.state.umidadeMax,\n        ventoMin: this.state.ventoMin,\n        ventoMax: this.state.ventoMax,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(SunriseSunset, {\n        nascerDoSol: this.state.nascerDoSol,\n        porDoSol: this.state.porDoSol,\n        duracaoDoDia: this.state.duracaoDoDia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center-box-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Camera, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\views\\Home.js"],"names":["React","axios","Camera","Header","UVIndex","TempHumi","SunriseSunset","WeatherForecast","Home","state","temperaturaClimatempo","umidadeClimatempo","temperaturaSEL","umidadeSEL","uvSEL","chuvaSEL","nascerDoSol","porDoSol","duracaoDoDia","isGateOpen","isRaining","expositionTime","isDaytime","cidade","frase","data","iconManha","iconTarde","iconNoite","probabilidadeChuva","precipitacaoChuva","temperaturaMin","temperaturaMax","umidadeMin","umidadeMax","ventoMin","ventoMax","requestClimatempo","get","then","response","console","log","setState","temperature","humidity","updateWidgets","catch","error","setTimeout","requestLioSensors","lastTemp","lastHum","Math","round","lastUV","Rain","requestSunriseSunsetTime","sensors","local","sunrise","slice","sunset","time","open","rain","ExpositionTime","checkDaytime","requestTodayWeatherForecast","name","text_icon","text","pt","date_br","icon","morning","afternoon","night","probability","precipitation","min","max","wind","velocity_min","velocity_max","todayWeatherForecast","forceUpdate","timeNow","Date","getHours","getMinutes","getSeconds","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Camera } from '../components/Camera.js';\r\nimport { Header } from '../components/Header.js';\r\nimport { UVIndex } from '../components/UVIndex.js';\r\n//import { Switch } from '../components/switch.js';\r\nimport { TempHumi } from '../components/TempHumi.js';\r\nimport { SunriseSunset } from '../components/SunriseSunset.js';\r\nimport { WeatherForecast } from '../components/WeatherForecast.js';\r\n\r\nexport class Home extends React.Component {\r\n  state = {\r\n    //constantes para o component TempHumi.js\r\n    temperaturaClimatempo: null,\r\n    umidadeClimatempo: null,\r\n    temperaturaSEL: null,\r\n    umidadeSEL: null,\r\n    uvSEL: null,\r\n    chuvaSEL: null,\r\n    //constantes para o component SunriseSunset.js\r\n    nascerDoSol: null,\r\n    porDoSol: null,\r\n    duracaoDoDia: null,\r\n    //constantes para o component Gate.js\r\n    isGateOpen: null,\r\n    isRaining: null,\r\n    expositionTime: null,\r\n    isDaytime: null,\r\n    //constantes para o component WeatherForecast.js\r\n    cidade: null,\r\n    frase: null,\r\n    data: null,\r\n    iconManha: null,\r\n    iconTarde: null,\r\n    iconNoite: null,\r\n    probabilidadeChuva: null,\r\n    precipitacaoChuva: null,\r\n    temperaturaMin: null,\r\n    temperaturaMax: null,\r\n    umidadeMin: null,\r\n    umidadeMax: null,\r\n    ventoMin: null,\r\n    ventoMax: null,\r\n  }\r\n  requestClimatempo = () => {\r\n  //Fetch da API do Climatempo\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/weather/locale/3680/current?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperaturaClimatempo: response.data.data.temperature + '°C',\r\n            umidadeClimatempo: response.data.data.humidity + '%',\r\n          }\r\n        );\r\n        this.updateWidgets();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do climatempo');\r\n        console.log(error);\r\n      });\r\n      setTimeout(this.requestClimatempo, 1000*60*5);\r\n  }\r\n  requestLioSensors = () => {\r\n    //Fetch da API do liosensors\r\n    axios.get('http://www.sel.eesc.usp.br/liosensors/json_data.php')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperaturaSEL: response.data.lastTemp + '°C',\r\n            umidadeSEL: response.data.lastHum + '%',\r\n            uvSEL: Math.round(response.data.lastUV),\r\n            chuvaSEL: response.data.Rain\r\n          }\r\n        );\r\n        this.updateWidgets();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request dos nossos sensores na SEL');\r\n        console.log(error);\r\n      })\r\n      setTimeout(this.requestLioSensors, 1000*30);\r\n  }\r\n  requestSunriseSunsetTime = () => {\r\n    //utilizando o método get para pegar os dados da API da Beaglebone da SEL\r\n    axios.get('http://143.107.235.2:8000/sensors/data/')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            nascerDoSol: response.data.sensors[0].local.sunrise.slice(10,19),\r\n            porDoSol: response.data.sensors[0].local.sunset.slice(10,19),\r\n            duracaoDoDia: response.data.sensors[0].local.time.slice(10,19),\r\n            isGateOpen: response.data.sensors[0].open,\r\n            isRaining: response.data.sensors[0].rain,\r\n            expositionTime: response.data.sensors[0].ExpositionTime,\r\n            isDaytime: this.checkDaytime()\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do 143.107.235.2:8000');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.requestSunriseSunsetTime, 30*1000);\r\n  }\r\n  requestTodayWeatherForecast = () =>{\r\n    //utilizando o método get para pegar os dados da API do climatempo\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/forecast/locale/3680/days/15?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            cidade: response.data.name,\r\n            frase: response.data.data[0].text_icon.text.pt,\r\n            data: response.data.data[0].date_br,\r\n            iconManha: \"../images/\" + response.data.data[0].text_icon.icon.morning + \".png\",\r\n            iconTarde: \"../images/\" + response.data.data[0].text_icon.icon.afternoon + \".png\",\r\n            iconNoite: \"../images/\" + response.data.data[0].text_icon.icon.night + \".png\",\r\n            probabilidadeChuva: response.data.data[0].rain.probability,\r\n            precipitacaoChuva: response.data.data[0].rain.precipitation,\r\n            temperaturaMin: response.data.data[0].temperature.min,\r\n            temperaturaMax: response.data.data[0].temperature.max,\r\n            umidadeMin: response.data.data[0].humidity.min,\r\n            umidadeMax: response.data.data[0].humidity.max,\r\n            ventoMin: response.data.data[0].wind.velocity_min,\r\n            ventoMax: response.data.data[0].wind.velocity_max,\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request da previsão do tempo do climatempo');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.todayWeatherForecast, 1000*60*60);\r\n    this.forceUpdate();\r\n  }\r\n  checkDaytime = () => {\r\n    const timeNow = new Date();\r\n    //verificamos se a hora está entre a hora do nascer do sol e a hora do por do sol\r\n    if (timeNow.getHours() > this.state.nascerDoSol.slice(0, 3) && timeNow.getHours() < this.state.porDoSol.slice(0, 3)) {\r\n      return true;\r\n    }\r\n    //verificamos se a hora é igual a hora do nascer do sol\r\n    if (timeNow.getHours() === this.state.nascerDoSol.slice(0, 3)){\r\n      //verificamos se o minuto é maior ou igual o minuto do nascer do sol\r\n      if (timeNow.getMinutes() > this.state.nascerDoSol.slice(4, 6)){\r\n        return true;\r\n      }\r\n      //caso o minuto seja igual, verificamos os segundos\r\n      if (timeNow.getMinutes() === this.state.nascerDoSol.slice(4, 6)){\r\n        //caso o segundo seja maior ou igual\r\n        if (timeNow.getSeconds() >= this.state.nascerDoSol.slice(7, 9)){\r\n          return true;\r\n        }\r\n        //caso o segundo seja menor\r\n        if (timeNow.getSeconds() < this.state.nascerDoSol.slice(7, 9)){\r\n          return false;\r\n        }\r\n      }\r\n      //caso o minuto seja menor que o do nascer do sol\r\n      if (timeNow.getMinutes() < this.state.nascerDoSol.slice(4, 6)){\r\n        return false;\r\n      }\r\n    }\r\n    //verificamos se a hora é igual a hora do por do sol\r\n    if(timeNow.getHours() === this.state.porDoSol.slice(0, 3)) {\r\n    //verificamos se o minuto é menor ou igual o minuto do nascer do sol\r\n      if (timeNow.getMinutes() < this.state.porDoSol.slice(4, 6)){\r\n        return true;\r\n      }\r\n      //caso o minuto seja igual, verificamos os segundos\r\n      if (timeNow.getMinutes() === this.state.porDoSol.slice(4, 6)){\r\n        //caso o segundo seja maior ou igual\r\n        if (timeNow.getSeconds() <= this.state.porDoSol.slice(7, 9)){\r\n          return true;\r\n        }\r\n        //caso o segundo seja menor\r\n        if (timeNow.getSeconds() > this.state.porDoSol.slice(7, 9)){\r\n          return false;\r\n        }\r\n      }\r\n      //caso o minuto seja maior que o do nascer do sol\r\n      if (timeNow.getMinutes() > this.state.porDoSol.slice(4, 6)){\r\n        return false;\r\n      }\r\n    }\r\n    //verificamos se a hora é menor que a hora do nascer do sol ou maior que a hora do por do sol\r\n    if (timeNow.getHours() < this.state.nascerDoSol.slice(0, 3) || timeNow.getHours() > this.state.porDoSol.slice(0, 3)){\r\n      return false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.requestClimatempo();\r\n    this.requestLioSensors();\r\n    this.requestSunriseSunsetTime();\r\n    this.requestTodayWeatherForecast();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='left-box'>\r\n          <TempHumi\r\n            temperaturaClimatempo={this.state.temperaturaClimatempo}\r\n            umidadeClimatempo={this.state.umidadeClimatempo}\r\n            temperaturaSEL={this.state.temperaturaSEL}\r\n            umidadeSEL={this.state.umidadeSEL}\r\n            chuvaSEL={this.state.chuvaSEL}\r\n          />\r\n          <UVIndex\r\n            uvSEL={this.state.uvSEL}\r\n          />\r\n          <Lens\r\n\r\n          />\r\n          <WeatherForecast\r\n            cidade={this.state.cidade}\r\n            frase={this.state.frase}\r\n            data={this.state.data}\r\n            iconManha={this.state.iconManha}\r\n            iconTarde={this.state.iconTarde}\r\n            iconNoite={this.state.iconNoite}\r\n            probabilidadeChuva={this.state.probabilidadeChuva}\r\n            precipitacaoChuva={this.state.precipitacaoChuva}\r\n            temperaturaMin={this.state.temperaturaMin}\r\n            temperaturaMax={this.state.temperaturaMax}\r\n            umidadeMin={this.state.umidadeMin}\r\n            umidadeMax={this.state.umidadeMax}\r\n            ventoMin={this.state.ventoMin}\r\n            ventoMax={this.state.ventoMax}\r\n          />\r\n          <SunriseSunset\r\n            nascerDoSol={this.state.nascerDoSol}\r\n            porDoSol={this.state.porDoSol}\r\n            duracaoDoDia={this.state.duracaoDoDia}\r\n          />\r\n        </div>\r\n        <div className='center-box-top'>\r\n          <Camera />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}