{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\views\\\\Home.js\";\nimport React from 'react';\nimport { Camera } from '../components/camera.js';\nimport { Header } from '../components/header.js';\nimport { UVIndex } from '../components/uv_index.js'; //import { Switch } from '../components/switch.js';\n\nimport { TempHumi } from '../components/temp_humi.js';\nimport { SunriseSunset } from '../components/sunrise_sunset.js';\nimport { WeatherForecast } from '../containers/weather_forecast.js';\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //constantes para o component TempHumi.js\n      temperaturaClimatempo: null,\n      umidadeClimatempo: null,\n      temperaturaSEL: null,\n      umidadeSEL: null,\n      uvSEL: null,\n      chuvaSEL: null,\n      //constantes para o component SunriseSunset.js\n      nascerDoSol: null,\n      porDoSol: null,\n      duracaoDoDia: null\n    };\n\n    _this.requestSunriseSunsetTime = function () {\n      //utilizando o método get para pegar os dados da API da Beaglebone da SEL\n      axios.get('http://143.107.235.2:8000/sensors/data/').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          nascer_do_sol: response.data.sensors[0].local.sunrise.slice(10, 19),\n          por_do_sol: response.data.sensors[0].local.sunset.slice(10, 19),\n          duracao_do_dia: response.data.sensors[0].local.time.slice(10, 19)\n        });\n\n        _this.updateWidgets(response.data.sensors[0].open, _this.checkDaytime(), response.data.sensors[0].rain, response.data.sensors[0].ExpositionTime);\n      }).catch(function (error) {\n        console.log('erro com o request do 143.107.235.2:8000');\n        console.log(error);\n      });\n      setTimeout(_this.requestSunriseSunsetTime, 30 * 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"left-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(TempHumi, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(WeatherForecast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(SunriseSunset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\views\\Home.js"],"names":["React","Camera","Header","UVIndex","TempHumi","SunriseSunset","WeatherForecast","Home","state","temperaturaClimatempo","umidadeClimatempo","temperaturaSEL","umidadeSEL","uvSEL","chuvaSEL","nascerDoSol","porDoSol","duracaoDoDia","requestSunriseSunsetTime","axios","get","then","response","console","log","data","setState","nascer_do_sol","sensors","local","sunrise","slice","por_do_sol","sunset","duracao_do_dia","time","updateWidgets","open","checkDaytime","rain","ExpositionTime","catch","error","setTimeout","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB,C,CACA;;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACN;AACAC,MAAAA,qBAAqB,EAAE,IAFjB;AAGNC,MAAAA,iBAAiB,EAAE,IAHb;AAINC,MAAAA,cAAc,EAAE,IAJV;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,KAAK,EAAE,IAND;AAONC,MAAAA,QAAQ,EAAE,IAPJ;AAQN;AACAC,MAAAA,WAAW,EAAE,IATP;AAUNC,MAAAA,QAAQ,EAAE,IAVJ;AAWNC,MAAAA,YAAY,EAAE;AAXR,KADV;;AAAA,UAcEC,wBAdF,GAc6B,YAAM;AAC/B;AACAC,MAAAA,KAAK,CAACC,GAAN,CAAU,yCAAV,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,cAAKC,QAAL,CACE;AACEC,UAAAA,aAAa,EAAEL,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BC,OAA/B,CAAuCC,KAAvC,CAA6C,EAA7C,EAAgD,EAAhD,CADjB;AAEEC,UAAAA,UAAU,EAAEV,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BI,MAA/B,CAAsCF,KAAtC,CAA4C,EAA5C,EAA+C,EAA/C,CAFd;AAGEG,UAAAA,cAAc,EAAEZ,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBC,KAAzB,CAA+BM,IAA/B,CAAoCJ,KAApC,CAA0C,EAA1C,EAA6C,EAA7C;AAHlB,SADF;;AAOA,cAAKK,aAAL,CAAmBd,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBS,IAA5C,EAAkD,MAAKC,YAAL,EAAlD,EAAuEhB,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBW,IAAhG,EAAsGjB,QAAQ,CAACG,IAAT,CAAcG,OAAd,CAAsB,CAAtB,EAAyBY,cAA/H;AACD,OAXH,EAYGC,KAZH,CAYS,UAAAC,KAAK,EAAI;AACdnB,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACD,OAfH;AAgBAC,MAAAA,UAAU,CAAC,MAAKzB,wBAAN,EAAgC,KAAG,IAAnC,CAAV;AACD,KAjCH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAkCW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;AA1CH;;AAAA;AAAA,EAA0BlB,KAAK,CAAC4C,SAAhC","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport { Camera } from '../components/camera.js';\r\nimport { Header } from '../components/header.js';\r\nimport { UVIndex } from '../components/uv_index.js';\r\n//import { Switch } from '../components/switch.js';\r\nimport { TempHumi } from '../components/temp_humi.js';\r\nimport { SunriseSunset } from '../components/sunrise_sunset.js';\r\nimport { WeatherForecast } from '../containers/weather_forecast.js';\r\n\r\nexport class Home extends React.Component {\r\n  state = {\r\n    //constantes para o component TempHumi.js\r\n    temperaturaClimatempo: null,\r\n    umidadeClimatempo: null,\r\n    temperaturaSEL: null,\r\n    umidadeSEL: null,\r\n    uvSEL: null,\r\n    chuvaSEL: null,\r\n    //constantes para o component SunriseSunset.js\r\n    nascerDoSol: null,\r\n    porDoSol: null,\r\n    duracaoDoDia: null\r\n  }\r\n  requestSunriseSunsetTime = () => {\r\n    //utilizando o método get para pegar os dados da API da Beaglebone da SEL\r\n    axios.get('http://143.107.235.2:8000/sensors/data/')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            nascer_do_sol: response.data.sensors[0].local.sunrise.slice(10,19),\r\n            por_do_sol: response.data.sensors[0].local.sunset.slice(10,19),\r\n            duracao_do_dia: response.data.sensors[0].local.time.slice(10,19)\r\n          }\r\n        );\r\n        this.updateWidgets(response.data.sensors[0].open, this.checkDaytime(), response.data.sensors[0].rain, response.data.sensors[0].ExpositionTime);\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do 143.107.235.2:8000');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.requestSunriseSunsetTime, 30*1000);\r\n  }\r\n  render (){\r\n    return (\r\n      <div className='left-box'>\r\n        <TempHumi />\r\n        <WeatherForecast />\r\n        <SunriseSunset />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}