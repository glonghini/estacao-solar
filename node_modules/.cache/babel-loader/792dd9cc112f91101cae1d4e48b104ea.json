{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\components\\\\temp_humi.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { UVIndex } from \"./uv_index.js\";\nexport var TempHumi =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TempHumi, _React$Component);\n\n  function TempHumi() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TempHumi);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TempHumi)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //constantes do tempo atual do climatempo\n      temperatura_CT: null,\n      umidade_CT: null,\n      //constantes dos sensores da SEL\n      temperatura_SEL: null,\n      umidade_SEL: null,\n      uv_SEL: null,\n      chuva_SEL: null\n    };\n\n    _this.requestClimatempo = function () {\n      axios.get('http://apiadvisor.climatempo.com.br/api/v1/weather/locale/3680/current?token=2e30b5793b0c662d9b901520663bd4d0').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          temperatura_CT: response.data.data.temperature + '°C',\n          umidade_CT: response.data.data.humidity + '%'\n        });\n\n        _this.updateWidgets();\n      }).catch(function (error) {\n        console.log('erro com o request do climatempo');\n        console.log(error);\n      });\n      setTimeout(_this.requestClimatempo, 1000 * 60 * 5);\n    };\n\n    _this.requestLioSensors = function () {\n      axios.get('http://www.sel.eesc.usp.br/liosensors/json_data.php').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          temperatura_SEL: response.data.lastTemp + '°C',\n          umidade_SEL: response.data.lastHum + '%',\n          uv_SEL: Math.round(response.data.lastUV),\n          chuva_SEL: response.data.Rain\n        });\n\n        _this.updateWidgets();\n      }).catch(function (error) {\n        console.log('erro com o request dos nossos sensores na SEL');\n        console.log(error);\n      });\n      setTimeout(_this.requestLioSensors, 1000 * 30);\n    };\n\n    _this.updateWidgets = function () {\n      //Renderizando o indice UV\n      ReactDOM.render(React.createElement(UVIndex, {\n        uv_sel: _this.state.uv_SEL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), document.getElementById('uv-index'));\n    };\n\n    return _this;\n  }\n\n  _createClass(TempHumi, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //utilizando o método get para pegar os dados da API do climatempo para o tempo atual\n      this.requestClimatempo();\n      this.requestLioSensors();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Temperatura e Umidade\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"col\", {\n        width: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"col\", {\n        width: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"col\", {\n        width: \"40%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Esta\\xE7\\xE3o\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Climatempo\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../images/thermometer.png\",\n        alt: \"thermometer icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.temperatura_SEL), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.temperatura_CT)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../images/humidity.png\",\n        alt: \"humidity icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.umidade_SEL), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.umidade_CT)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../images/rain.png\",\n        alt: \"rain icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.chuva_SEL), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TempHumi;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\components\\temp_humi.js"],"names":["React","ReactDOM","axios","UVIndex","TempHumi","state","temperatura_CT","umidade_CT","temperatura_SEL","umidade_SEL","uv_SEL","chuva_SEL","requestClimatempo","get","then","response","console","log","data","setState","temperature","humidity","updateWidgets","catch","error","setTimeout","requestLioSensors","lastTemp","lastHum","Math","round","lastUV","Rain","render","document","getElementById","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\nimport {UVIndex} from \"./uv_index.js\";\r\n\r\nexport class TempHumi extends React.Component {\r\n  state = {\r\n    //constantes do tempo atual do climatempo\r\n    temperatura_CT: null,\r\n    umidade_CT: null,\r\n    //constantes dos sensores da SEL\r\n    temperatura_SEL: null,\r\n    umidade_SEL: null,\r\n    uv_SEL: null,\r\n    chuva_SEL: null\r\n  }\r\n  requestClimatempo = () => {\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/weather/locale/3680/current?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperatura_CT: response.data.data.temperature + '°C',\r\n            umidade_CT: response.data.data.humidity + '%',\r\n          }\r\n        );\r\n        this.updateWidgets();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do climatempo');\r\n        console.log(error);\r\n      });\r\n      setTimeout(this.requestClimatempo, 1000*60*5);\r\n  }\r\n  requestLioSensors = () => {\r\n    axios.get('http://www.sel.eesc.usp.br/liosensors/json_data.php')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            temperatura_SEL: response.data.lastTemp + '°C',\r\n            umidade_SEL: response.data.lastHum + '%',\r\n            uv_SEL: Math.round(response.data.lastUV),\r\n            chuva_SEL: response.data.Rain\r\n          }\r\n        );\r\n        this.updateWidgets();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request dos nossos sensores na SEL');\r\n        console.log(error);\r\n      })\r\n      setTimeout(this.requestLioSensors, 1000*30);\r\n\r\n  }\r\n  updateWidgets = () => {\r\n    //Renderizando o indice UV\r\n    ReactDOM.render(<UVIndex uv_sel={this.state.uv_SEL}/>, document.getElementById('uv-index'));\r\n  }\r\n  componentDidMount() {\r\n    //utilizando o método get para pegar os dados da API do climatempo para o tempo atual\r\n    this.requestClimatempo();\r\n    this.requestLioSensors();\r\n    }\r\n  render() {\r\n      return (<div>\r\n \t     <fieldset>\r\n        <legend>Temperatura e Umidade</legend>\r\n   \t    <table>\r\n          <thead>\r\n            <col width=\"20%\"></col>\r\n            <col width=\"40%\"></col>\r\n            <col width=\"40%\"></col>\r\n            <tr>\r\n         \t\t  <td></td>\r\n         \t\t  <th>Estação</th>\r\n         \t\t  <th>Climatempo</th>\r\n         \t  </tr>\r\n          </thead>\r\n          <tbody>\r\n         \t  <tr>\r\n         \t\t  <th><img src=\"../images/thermometer.png\" alt=\"thermometer icon\"/></th>\r\n         \t\t  <td>{this.state.temperatura_SEL}</td>\r\n         \t\t  <td>{this.state.temperatura_CT}</td>\r\n         \t  </tr>\r\n         \t  <tr>\r\n         \t\t  <th><img src=\"../images/humidity.png\" alt=\"humidity icon\"/></th>\r\n         \t\t  <td>{this.state.umidade_SEL}</td>\r\n         \t\t  <td>{this.state.umidade_CT}</td>\r\n         \t  </tr>\r\n            <tr>\r\n         \t\t  <th><img src=\"../images/rain.png\" alt=\"rain icon\"/></th>\r\n         \t\t  <td>{this.state.chuva_SEL}</td>\r\n         \t\t  <td></td>\r\n         \t  </tr>\r\n          </tbody>\r\n     \t  </table>\r\n      </fieldset>\r\n   \t\t</div>\r\n   );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}