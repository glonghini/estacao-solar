{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\components\\\\gate.js\";\nimport React from 'react';\nexport var Gate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Gate, _React$Component);\n\n  function Gate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Gate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Gate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      alert: false,\n      reason: ''\n    };\n    return _this;\n  }\n\n  _createClass(Gate, [{\n    key: \"render\",\n    value: function render() {\n      //condicionais para ativar o alerta de irregularidades com o estado do portão\n      //primeiro caso: portão aberto durante a noite\n      if (this.props.open) {\n        if (this.props.daytime === false) {\n          state.alert.setState(true);\n          state.reason.setState(\"Portão aberto durante a noite\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"box-alerta-gate\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, React.createElement(\"aviso\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }, \"!\")), React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, state.reason), React.createElement(\"div\", {\n            className: \"gate gate-open\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"portao\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, \"Aberto\")));\n        }\n      } //segundo caso: portão fechado durante o dia\n\n\n      if (this.props.open === false) {\n        if (this.props.daytime) {\n          //caso esteja chovendo\n          if (this.props.rain) {\n            state.alert.setState(true);\n            state.reason.setState(\"Portão fechado durante o dia por causa da chuva\");\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"box-alerta-gate\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, React.createElement(\"aviso\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, \"!\")), React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, state.reason), React.createElement(\"div\", {\n              className: \"gate gate-closed\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"portao\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, \"Fechado\")));\n          } //caso não esteja chovendo\n\n\n          if (this.props.rain === false) {\n            state.alert.setState(true);\n            state.reason.setState(\"Portão fechado durante o dia\");\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"box-alerta-gate\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, React.createElement(\"aviso\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            }, \"!\")), React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, state.reason), React.createElement(\"div\", {\n              className: \"gate gate-closed\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"portao\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, \"Fechado\")));\n          }\n        }\n      } //terceiro caso: tudo normal durante o dia\n\n\n      if (this.props.open && this.props.daytime) {\n        state.alert.setState(false);\n        state.reason.setState('');\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"gate gate-open\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"portao\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Aberto\")));\n      } //quarto caso: tudo normal durante a noite\n\n\n      if (this.props.open === false && this.props.daytime === false) {\n        state.alert = false; //.setState(false);\n\n        state.reason = ''; //.setState('');\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"gate gate-closed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"portao\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Fechado\")));\n      } //quinto caso: caso não seja possível saber o estado do portão por falha no request\n      else {\n          console.log('Não foi possível obter o estado do portão');\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"N\\xE3o foi poss\\xEDvel obter o estado do port\\xE3o\"));\n        }\n    }\n  }]);\n\n  return Gate;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\components\\gate.js"],"names":["React","Gate","state","alert","reason","props","open","daytime","setState","rain","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport class Gate extends React.Component {\r\n  state = {\r\n    alert: false,\r\n    reason: ''\r\n  }\r\n  render() {\r\n    //condicionais para ativar o alerta de irregularidades com o estado do portão\r\n    //primeiro caso: portão aberto durante a noite\r\n    if (this.props.open){\r\n      if (this.props.daytime === false) {\r\n        state.alert.setState(true);\r\n        state.reason.setState(\"Portão aberto durante a noite\");\r\n        return(<div>\r\n\t\t\t<div className=\"box-alerta-gate\">\r\n            <aviso>!</aviso>\r\n            </div>\r\n\t\t\t<h3>{state.reason}</h3>\r\n          <div className=\"gate gate-open\">\r\n          <div className=\"portao\">Aberto</div>\r\n          </div>\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n    //segundo caso: portão fechado durante o dia\r\n    if (this.props.open === false){\r\n      if (this.props.daytime) {\r\n        //caso esteja chovendo\r\n        if (this.props.rain) {\r\n          state.alert.setState(true);\r\n          state.reason.setState(\"Portão fechado durante o dia por causa da chuva\");\r\n          return(<div>\r\n\t\t\t      <div className=\"box-alerta-gate\">\r\n              <aviso>!</aviso>\r\n            </div>\r\n\t\t\t      <h3>{state.reason}</h3>\r\n            <div className=\"gate gate-closed\">\r\n              <div className=\"portao\">Fechado</div>\r\n            </div>\r\n          </div>\r\n          );\r\n        }\r\n        //caso não esteja chovendo\r\n        if (this.props.rain === false) {\r\n          state.alert.setState(true);\r\n          state.reason.setState(\"Portão fechado durante o dia\");\r\n          return(<div>\r\n            <div className=\"box-alerta-gate\">\r\n              <aviso>!</aviso>\r\n            </div>\r\n\t\t\t      <h3>{state.reason}</h3>\r\n            <div className=\"gate gate-closed\">\r\n              <div className=\"portao\">Fechado</div>\r\n            </div>\r\n          </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    //terceiro caso: tudo normal durante o dia\r\n    if (this.props.open && this.props.daytime){\r\n      state.alert.setState(false);\r\n      state.reason.setState('');\r\n      return(<div>\r\n        <div className=\"gate gate-open\">\r\n        <div className=\"portao\">Aberto</div>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n    //quarto caso: tudo normal durante a noite\r\n    if (this.props.open === false && this.props.daytime === false) {\r\n      state.alert = false;//.setState(false);\r\n      state.reason = '';//.setState('');\r\n      return(<div>\r\n\t\t<div className=\"gate gate-closed\">\r\n        <div className=\"portao\">Fechado</div>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n    //quinto caso: caso não seja possível saber o estado do portão por falha no request\r\n    else {\r\n      console.log('Não foi possível obter o estado do portão');\r\n      return(<div>\r\n        <h3>Não foi possível obter o estado do portão</h3>\r\n      </div>\r\n    );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}