{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\containers\\\\WeatherForecast.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { WeatherForecastComponent } from '../components/weather_forecast.js';\nexport var WeatherForecast =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WeatherForecast, _React$Component);\n\n  function WeatherForecast() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherForecast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherForecast)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //constantes de informação geral\n      cidade: null,\n      frase: null,\n      data: null,\n      //constantes do primeiro dia, hoje\n      iconManha: null,\n      iconTarde: null,\n      iconNoite: null,\n      probabilidadeChuva: null,\n      precipitacaoChuva: null,\n      temperaturaMin: null,\n      temperaturaMax: null,\n      umidadeMin: null,\n      umidadeMax: null,\n      ventoMin: null,\n      ventoMax: null\n    };\n\n    _this.todayWeatherForecast = function () {\n      //utilizando o método get para pegar os dados da API do climatempo\n      axios.get('http://apiadvisor.climatempo.com.br/api/v1/forecast/locale/3680/days/15?token=2e30b5793b0c662d9b901520663bd4d0').then(function (response) {\n        console.log(response.data);\n\n        _this.setState({\n          //constantes de informação geral\n          cidade: response.data.name,\n          frase: response.data.data[0].text_icon.text.pt,\n          //constantes do primeiro dia, hoje\n          data: response.data.data[0].date_br,\n          iconManha: \"../images/\" + response.data.data[0].text_icon.icon.morning + \".png\",\n          iconTarde: \"../images/\" + response.data.data[0].text_icon.icon.afternoon + \".png\",\n          iconNoite: \"../images/\" + response.data.data[0].text_icon.icon.night + \".png\",\n          probabilidadeChuva: response.data.data[0].rain.probability,\n          precipitacaoChuva: response.data.data[0].rain.precipitation,\n          temperaturaMin: response.data.data[0].temperature.min,\n          temperaturaMax: response.data.data[0].temperature.max,\n          umidadeMin: response.data.data[0].humidity.min,\n          umidadeMax: response.data.data[0].humidity.max,\n          ventoMin: response.data.data[0].wind.velocity_min,\n          ventoMax: response.data.data[0].wind.velocity_max\n        });\n      }).catch(function (error) {\n        console.log('erro com o request da previsão do tempo do climatempo');\n        console.log(error);\n      });\n      setTimeout(_this.todayWeatherForecast, 1000 * 60 * 60);\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherForecast, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.todayWeatherForecast();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(WeatherForecastComponent, {\n        cidade: this.state.cidade,\n        frase: this.state.frase,\n        data: this.state.data,\n        iconManha: this.state.iconManha,\n        iconTarde: this.state.iconTarde,\n        iconNoite: this.state.iconNoite,\n        probabilidadeChuva: this.state.probabilidadeChuva,\n        precipitacaoChuva: this.state.precipitacaoChuva,\n        temperaturaMin: this.state.temperaturaMin,\n        temperaturaMax: this.state.temperaturaMax,\n        umidadeMin: this.state.umidadeMin,\n        umidadeMax: this.state.umidadeMax,\n        ventoMin: this.state.ventoMin,\n        ventoMax: this.state.ventoMax,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return WeatherForecast;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\containers\\WeatherForecast.js"],"names":["React","axios","WeatherForecastComponent","WeatherForecast","state","cidade","frase","data","iconManha","iconTarde","iconNoite","probabilidadeChuva","precipitacaoChuva","temperaturaMin","temperaturaMax","umidadeMin","umidadeMax","ventoMin","ventoMax","todayWeatherForecast","get","then","response","console","log","setState","name","text_icon","text","pt","date_br","icon","morning","afternoon","night","rain","probability","precipitation","temperature","min","max","humidity","wind","velocity_min","velocity_max","catch","error","setTimeout","forceUpdate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { WeatherForecastComponent } from '../components/weather_forecast.js';\r\n\r\nexport class WeatherForecast extends React.Component {\r\n  state = {\r\n    //constantes de informação geral\r\n    cidade: null,\r\n    frase: null,\r\n    data: null,\r\n    //constantes do primeiro dia, hoje\r\n    iconManha: null,\r\n    iconTarde: null,\r\n    iconNoite: null,\r\n    probabilidadeChuva: null,\r\n    precipitacaoChuva: null,\r\n    temperaturaMin: null,\r\n    temperaturaMax: null,\r\n    umidadeMin: null,\r\n    umidadeMax: null,\r\n    ventoMin: null,\r\n    ventoMax: null,\r\n  }\r\n  todayWeatherForecast = () =>{\r\n    //utilizando o método get para pegar os dados da API do climatempo\r\n    axios.get('http://apiadvisor.climatempo.com.br/api/v1/forecast/locale/3680/days/15?token=2e30b5793b0c662d9b901520663bd4d0')\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState(\r\n          {\r\n            //constantes de informação geral\r\n            cidade: response.data.name,\r\n            frase: response.data.data[0].text_icon.text.pt,\r\n            //constantes do primeiro dia, hoje\r\n            data: response.data.data[0].date_br,\r\n            iconManha: \"../images/\" + response.data.data[0].text_icon.icon.morning + \".png\",\r\n            iconTarde: \"../images/\" + response.data.data[0].text_icon.icon.afternoon + \".png\",\r\n            iconNoite: \"../images/\" + response.data.data[0].text_icon.icon.night + \".png\",\r\n            probabilidadeChuva: response.data.data[0].rain.probability,\r\n            precipitacaoChuva: response.data.data[0].rain.precipitation,\r\n            temperaturaMin: response.data.data[0].temperature.min,\r\n            temperaturaMax: response.data.data[0].temperature.max,\r\n            umidadeMin: response.data.data[0].humidity.min,\r\n            umidadeMax: response.data.data[0].humidity.max,\r\n            ventoMin: response.data.data[0].wind.velocity_min,\r\n            ventoMax: response.data.data[0].wind.velocity_max,\r\n          }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request da previsão do tempo do climatempo');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.todayWeatherForecast, 1000*60*60);\r\n    this.forceUpdate();\r\n  }\r\n  componentDidMount() {\r\n    this.todayWeatherForecast();\r\n    }\r\n  render() {\r\n    return (\r\n      <WeatherForecastComponent\r\n        cidade={this.state.cidade}\r\n        frase={this.state.frase}\r\n        data={this.state.data}\r\n        iconManha={this.state.iconManha}\r\n        iconTarde={this.state.iconTarde}\r\n        iconNoite={this.state.iconNoite}\r\n        probabilidadeChuva={this.state.probabilidadeChuva}\r\n        precipitacaoChuva={this.state.precipitacaoChuva}\r\n        temperaturaMin={this.state.temperaturaMin}\r\n        temperaturaMax={this.state.temperaturaMax}\r\n        umidadeMin={this.state.umidadeMin}\r\n        umidadeMax={this.state.umidadeMax}\r\n        ventoMin={this.state.ventoMin}\r\n        ventoMax={this.state.ventoMax}\r\n      />\r\n  );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}