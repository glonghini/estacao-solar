{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\estacao-solar\\\\src\\\\containers\\\\charts.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { ChartComponent } from '../components/charts.js';\nexport var Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //dados para os logs de temperatura\n      dataMatrixTempHumi: [],\n      dataMatrixUV: [],\n      //constantes para verificação do intervalo do dia\n      firstDaytimePosition: 0,\n      lastDaytimePosition: 0,\n      //constantes de estado do gráfico\n      isTempActive: true,\n      isHumiActive: false,\n      isUVActive: true,\n      is30sActive: false,\n      is1mActive: false,\n      is5mActive: false,\n      is15mActive: true,\n      is30mActive: false,\n      is1hActive: false,\n      //dataNow: 'Temperatura',\n      timeScaleNow: '15m',\n      //chart data para ser plotada no gráfico\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Temperatura',\n          fontSize: 10,\n          id: 'y-axis-left',\n          data: [],\n          backgroundColor: []\n        }, {\n          label: 'Umidade',\n          yAxisID: 'y-axis-left',\n          data: [],\n          backgroundColor: []\n        }, {\n          label: 'Índice UV',\n          yAxisID: 'y-axis-right',\n          data: [],\n          backgroundColor: []\n        }],\n        options: {\n          responsive: false,\n          maintainAspectRatio: true,\n          width: \"100%\",\n          scales: {\n            xAxes: [{\n              stacked: true\n            }],\n            yAxes: [{\n              stacked: false,\n              position: \"left\",\n              id: \"y-axis-left\",\n              ticks: {\n                beginAtZero: true\n              },\n              gridLines: {\n                display: false\n              }\n            }, {\n              stacked: true,\n              position: \"right\",\n              id: \"y-axis-right\",\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      } //função periódica dos requests\n\n    };\n\n    _this.requestTempHumiUV = function () {\n      axios.get('http://143.107.235.2:8000/sensors/files/logsUV/log-' + _this.dataDateRequest() + '.txt').then(function (response) {\n        _this.createMatrixUV(response.data);\n\n        _this.refreshData();\n      }).catch(function (error) {\n        console.log('erro com o request do histórico de temperatura e umidade');\n        console.log(error);\n      });\n      axios.get('http://143.107.235.2:8000/sensors/files/logs/log-' + _this.dataDateRequest() + '.txt').then(function (response) {\n        _this.createMatrixTempHumi(response.data);\n\n        _this.refreshData();\n      }).catch(function (error) {\n        console.log('erro com o request do histórico uv');\n        console.log(error);\n      });\n      setTimeout(_this.requestTempHumiUV, 30 * 1000);\n    };\n\n    _this.dataDateRequest = function () {\n      var myDate = new Date(); //verifica-se se o dia e o mês estão entre 1 e 9 para adicionar o 0 antes do dígito\n\n      if (myDate.getDate() < 10) {\n        if (myDate.getMonth() + 1 < 10) {\n          //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\n          return '0' + myDate.getDate() + '_0' + (myDate.getMonth() + 1) + '_' + myDate.getFullYear();\n        } //verifica-se se somente o dia está entre 1 e 9 para adicionar o 0 antes do dígito\n\n      } else if (myDate.getDate() < 10) {\n        //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\n        return '0' + myDate.getDate() + '_' + (myDate.getMonth() + 1) + '_' + myDate.getFullYear(); //verifica-se se somente o mês está entre 1 e 9 para adicionar o 0 antes do dígito\n      } else if (myDate.getMonth() + 1 < 10) {\n        //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\n        return myDate.getDate() + '_0' + (myDate.getMonth() + 1) + '_' + myDate.getFullYear(); //se nem o dia nem mês estão entre 1 e 9\n      } else {\n        //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\n        return myDate.getDate() + '_' + (myDate.getMonth() + 1) + '_' + myDate.getFullYear();\n      }\n    };\n\n    _this.createMatrixTempHumi = function (string) {\n      //função para criar a matrix dos dados recebidos da API\n      //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\n      //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\n      _this.state.dataMatrixTempHumi = []; //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\n\n      var myString = string.replace(/\\n/g, '\\t'); //separamos todos os valores por tabs\n\n      var myArray = myString.split('\\t'); //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\n\n      var counter,\n          chunk = 6;\n\n      for (counter = 0; counter < myArray.length; counter += chunk) {\n        _this.state.dataMatrixTempHumi.push(myArray.slice(counter, counter + chunk));\n      }\n    };\n\n    _this.createMatrixUV = function (string) {\n      //função para criar a matrix dos dados recebidos da API\n      //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\n      //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\n      _this.state.dataMatrixUV = []; //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\n\n      var myString = string.replace(/\\n/g, '\\t'); //separamos todos os valores por tabs\n\n      var myArray = myString.split('\\t'); //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\n\n      var counter,\n          chunk = 12;\n\n      for (counter = 0; counter < myArray.length; counter += chunk) {\n        _this.state.dataMatrixUV.push(myArray.slice(counter, counter + chunk));\n      }\n    };\n\n    _this.dataTimeScaleBuilder = function (timeScale, dataName) {\n      //matriz importada do state\n      var matrix = []; //vetores para receber os valores tratados\n\n      var label = [];\n      var data = []; //counter para os for loops\n\n      var counter = 0;\n      var column = 0; //primeiro, importamos a matrix com os dados que queremos para trata-la\n\n      if (dataName === 'Temperatura') {\n        _this.matrix = _this.state.dataMatrixTempHumi;\n        column = 3;\n      } else if (dataName === 'Umidade') {\n        _this.matrix = _this.state.dataMatrixTempHumi;\n        column = 4;\n      } else if (dataName === 'UV') {\n        _this.matrix = _this.state.dataMatrixUV;\n        column = 3;\n      } //segundo, vemos qual posição do vetor o sol ja nasceu e qual posição o sol ja se pôs\n      //procurando a primeira posição do dia\n\n\n      counter = 0;\n\n      while (counter <= _this.matrix.length - 1) {\n        if (_this.matrix[counter][0].slice(0, 2) >= 5 && _this.matrix[counter][0].slice(0, 2) <= 20) {\n          _this.state.firstDaytimePosition = counter;\n          break;\n        } else {\n          counter++;\n        }\n      } //procurando a última posição do dia\n\n\n      counter = 0;\n\n      while (counter <= _this.matrix.length - 1) {\n        if (_this.matrix[counter][0].slice(0, 2) >= 20 || counter === _this.matrix.length - 1) {\n          _this.state.lastDaytimePosition = counter;\n          break;\n        } else {\n          counter++;\n        }\n      } //checando se houve erro na captura dos dados\n\n\n      if (_this.state.firstDaytimePosition === null) {\n        console.log(\"erro na captura dos dados: não houve captura durante o dia\");\n      } else if (_this.state.lastDaytimePosition === null) {\n        console.log(\"erro na captura dos dados: não houve captura durante o dia\");\n      } //terceiro, tratamos os dados de acordo com a escala do tempo\n\n\n      if (timeScale === '30s') {\n        //timeStep é a variável que vai pegar os pontos em um certo intervalo\n        //como nossa primeira escala é de 30s, temos que pegar todos os pontos\n        var timeStep = 1;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += timeStep) {\n          label.push(_this.matrix[counter][0]);\n          data.push(_this.matrix[counter][column]);\n        }\n      } else if (timeScale === '1m') {\n        var _timeStep = 2;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += _timeStep) {\n          label.push(_this.matrix[counter][0].slice(0, 5));\n          data.push(_this.matrix[counter][column]);\n        }\n      } else if (timeScale === '5m') {\n        var _timeStep2 = 10;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += _timeStep2) {\n          label.push(_this.matrix[counter][0].slice(0, 5));\n          data.push(_this.matrix[counter][column]);\n        }\n      } else if (timeScale === '15m') {\n        var _timeStep3 = 30;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += _timeStep3) {\n          label.push(_this.matrix[counter][0].slice(0, 5));\n          data.push(_this.matrix[counter][column]);\n        }\n      } else if (timeScale === '30m') {\n        var _timeStep4 = 60;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += _timeStep4) {\n          label.push(_this.matrix[counter][0].slice(0, 5));\n          data.push(_this.matrix[counter][column]);\n        }\n      } else if (timeScale === '1h') {\n        var _timeStep5 = 120;\n\n        for (counter = _this.state.firstDaytimePosition; counter < Math.min(_this.matrix.length - 1, _this.state.lastDaytimePosition); counter += _timeStep5) {\n          label.push(_this.matrix[counter][0].slice(0, 2) + 'h');\n          data.push(_this.matrix[counter][column]);\n        }\n      }\n\n      return [label, data];\n    };\n\n    _this.changeDataTemp = function () {\n      var returnedValues = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'Temperatura');\n\n      if (_this.state.isTempActive) {\n        _this.state.chartData.datasets[0].data = [];\n        _this.state.chartData.datasets[0].backgroundColor = [];\n      } else {\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n        _this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\n      }\n\n      _this.state.isTempActive = !_this.state.isTempActive;\n\n      if (_this.state.isTempActive === false && _this.state.isHumiActive === false && _this.state.isUVActive === false) {\n        _this.state.chartData.labels = [];\n      }\n\n      _this.forceUpdate();\n    };\n\n    _this.changeDataHumi = function () {\n      var returnedValues = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'Umidade');\n\n      if (_this.state.isHumiActive) {\n        _this.state.chartData.datasets[1].data = [];\n        _this.state.chartData.datasets[1].backgroundColor = [];\n      } else {\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[1].data = returnedValues[1];\n        _this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\n      }\n\n      _this.state.dataNow = 'Umidade';\n      _this.state.isHumiActive = !_this.state.isHumiActive;\n\n      if (_this.state.isTempActive === false && _this.state.isHumiActive === false && _this.state.isUVActive === false) {\n        _this.state.chartData.labels = [];\n      }\n\n      _this.forceUpdate();\n    };\n\n    _this.changeDataUV = function () {\n      var returnedValues = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'UV');\n\n      if (_this.state.isUVActive) {\n        _this.state.chartData.datasets[2].data = [];\n        _this.state.chartData.datasets[2].backgroundColor = [];\n      } else {\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[2].data = returnedValues[1];\n        _this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\n      }\n\n      _this.state.dataNow = 'UV';\n      _this.state.isUVActive = !_this.state.isUVActive;\n\n      if (_this.state.isTempActive === false && _this.state.isHumiActive === false && _this.state.isUVActive === false) {\n        _this.state.chartData.labels = [];\n      }\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale30s = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('30s', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues = _this.dataTimeScaleBuilder('30s', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues[0];\n        _this.state.chartData.datasets[1].data = _returnedValues[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues2 = _this.dataTimeScaleBuilder('30s', 'UV');\n\n        _this.state.chartData.labels = _returnedValues2[0];\n        _this.state.chartData.datasets[2].data = _returnedValues2[1];\n      }\n\n      _this.state.is30sActive = true;\n      _this.state.is1mActive = false;\n      _this.state.is5mActive = false;\n      _this.state.is15mActive = false;\n      _this.state.is30mActive = false;\n      _this.state.is1hActive = false;\n      _this.state.timeScaleNow = '30s';\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale1m = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('1m', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues3 = _this.dataTimeScaleBuilder('1m', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues3[0];\n        _this.state.chartData.datasets[1].data = _returnedValues3[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues4 = _this.dataTimeScaleBuilder('1m', 'UV');\n\n        _this.state.chartData.labels = _returnedValues4[0];\n        _this.state.chartData.datasets[2].data = _returnedValues4[1];\n      }\n\n      _this.state.is30sActive = false;\n      _this.state.is1mActive = true;\n      _this.state.is5mActive = false;\n      _this.state.is15mActive = false;\n      _this.state.is30mActive = false;\n      _this.state.is1hActive = false;\n      _this.state.timeScaleNow = '1m';\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale5m = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('5m', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues5 = _this.dataTimeScaleBuilder('5m', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues5[0];\n        _this.state.chartData.datasets[1].data = _returnedValues5[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues6 = _this.dataTimeScaleBuilder('5m', 'UV');\n\n        _this.state.chartData.labels = _returnedValues6[0];\n        _this.state.chartData.datasets[2].data = _returnedValues6[1];\n      }\n\n      _this.state.is30sActive = false;\n      _this.state.is1mActive = false;\n      _this.state.is5mActive = true;\n      _this.state.is15mActive = false;\n      _this.state.is30mActive = false;\n      _this.state.is1hActive = false;\n      _this.state.timeScaleNow = '5m';\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale15m = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('15m', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues7 = _this.dataTimeScaleBuilder('15m', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues7[0];\n        _this.state.chartData.datasets[1].data = _returnedValues7[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues8 = _this.dataTimeScaleBuilder('15m', 'UV');\n\n        _this.state.chartData.labels = _returnedValues8[0];\n        _this.state.chartData.datasets[2].data = _returnedValues8[1];\n      }\n\n      _this.state.is30sActive = false;\n      _this.state.is1mActive = false;\n      _this.state.is5mActive = false;\n      _this.state.is15mActive = true;\n      _this.state.is30mActive = false;\n      _this.state.is1hActive = false;\n      _this.state.timeScaleNow = '15m';\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale30m = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('30m', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues9 = _this.dataTimeScaleBuilder('30m', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues9[0];\n        _this.state.chartData.datasets[1].data = _returnedValues9[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues10 = _this.dataTimeScaleBuilder('30m', 'UV');\n\n        _this.state.chartData.labels = _returnedValues10[0];\n        _this.state.chartData.datasets[2].data = _returnedValues10[1];\n      }\n\n      _this.state.is30sActive = false;\n      _this.state.is1mActive = false;\n      _this.state.is5mActive = false;\n      _this.state.is15mActive = false;\n      _this.state.is30mActive = true;\n      _this.state.is1hActive = false;\n      _this.state.timeScaleNow = '30m';\n\n      _this.forceUpdate();\n    };\n\n    _this.changeTimeScale1h = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder('1h', 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues11 = _this.dataTimeScaleBuilder('1h', 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues11[0];\n        _this.state.chartData.datasets[1].data = _returnedValues11[1];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues12 = _this.dataTimeScaleBuilder('1h', 'UV');\n\n        _this.state.chartData.labels = _returnedValues12[0];\n        _this.state.chartData.datasets[2].data = _returnedValues12[1];\n      }\n\n      _this.state.is30sActive = false;\n      _this.state.is1mActive = false;\n      _this.state.is5mActive = false;\n      _this.state.is15mActive = false;\n      _this.state.is30mActive = false;\n      _this.state.is1hActive = true;\n      _this.state.timeScaleNow = '1h';\n\n      _this.forceUpdate();\n    };\n\n    _this.refreshData = function () {\n      if (_this.state.isTempActive) {\n        var returnedValues = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'Temperatura');\n\n        _this.state.chartData.labels = returnedValues[0];\n        _this.state.chartData.datasets[0].data = returnedValues[1];\n        _this.state.chartData.datasets[0].label = 'Temperatura';\n        _this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\n      }\n\n      if (_this.state.isHumiActive) {\n        var _returnedValues13 = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'Umidade');\n\n        _this.state.chartData.labels = _returnedValues13[0];\n        _this.state.chartData.datasets[1].data = _returnedValues13[1];\n        _this.state.chartData.datasets[1].label = 'Umidade';\n        _this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\n      }\n\n      if (_this.state.isUVActive) {\n        var _returnedValues14 = _this.dataTimeScaleBuilder(_this.state.timeScaleNow, 'UV');\n\n        _this.state.chartData.labels = _returnedValues14[0];\n        _this.state.chartData.datasets[2].data = _returnedValues14[1];\n        _this.state.chartData.datasets[2].label = 'Índice UV';\n        _this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\n      }\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestTempHumiUV();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Medida\"), React.createElement(\"th\", {\n        colSpan: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Escala de Tempo\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.isTempActive ? 'button-temp-chart' : 'button',\n        value: \"Temperatura\",\n        type: \"button\",\n        onClick: this.changeDataTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.isHumiActive ? 'button-humi-chart' : 'button',\n        value: \"Umidade\",\n        type: \"button\",\n        onClick: this.changeDataHumi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.isUVActive ? 'button-uv-chart' : 'button',\n        value: \"\\xCDndice UV\",\n        type: \"button\",\n        onClick: this.changeDataUV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is30sActive ? 'button-time-chart' : 'button',\n        value: \"30s\",\n        type: \"button\",\n        onClick: this.changeTimeScale30s,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is1mActive ? 'button-time-chart' : 'button',\n        value: \"1m\",\n        type: \"button\",\n        onClick: this.changeTimeScale1m,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is5mActive ? 'button-time-chart' : 'button',\n        value: \"5m\",\n        type: \"button\",\n        onClick: this.changeTimeScale5m,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is15mActive ? 'button-time-chart' : 'button',\n        value: \"15m\",\n        type: \"button\",\n        onClick: this.changeTimeScale15m,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is30mActive ? 'button-time-chart' : 'button',\n        value: \"30m\",\n        type: \"button\",\n        onClick: this.changeTimeScale30m,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: this.state.is1hActive ? 'button-time-chart' : 'button',\n        value: \"1h\",\n        type: \"button\",\n        onClick: this.changeTimeScale1h,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      })))))), React.createElement(ChartComponent, {\n        chartData: this.state.chartData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\GitHub\\estacao-solar\\src\\containers\\charts.js"],"names":["React","axios","Line","ChartComponent","Chart","state","dataMatrixTempHumi","dataMatrixUV","firstDaytimePosition","lastDaytimePosition","isTempActive","isHumiActive","isUVActive","is30sActive","is1mActive","is5mActive","is15mActive","is30mActive","is1hActive","timeScaleNow","chartData","labels","datasets","label","fontSize","id","data","backgroundColor","yAxisID","options","responsive","maintainAspectRatio","width","scales","xAxes","stacked","yAxes","position","ticks","beginAtZero","gridLines","display","requestTempHumiUV","get","dataDateRequest","then","response","createMatrixUV","refreshData","catch","error","console","log","createMatrixTempHumi","setTimeout","myDate","Date","getDate","getMonth","getFullYear","string","myString","replace","myArray","split","counter","chunk","length","push","slice","dataTimeScaleBuilder","timeScale","dataName","matrix","column","timeStep","Math","min","changeDataTemp","returnedValues","forceUpdate","changeDataHumi","dataNow","changeDataUV","changeTimeScale30s","changeTimeScale1m","changeTimeScale5m","changeTimeScale15m","changeTimeScale30m","changeTimeScale1h","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport { ChartComponent } from '../components/charts.js';\r\n\r\nexport class Chart extends React.Component {\r\n  state = {\r\n    //dados para os logs de temperatura\r\n    dataMatrixTempHumi: [],\r\n    dataMatrixUV: [],\r\n    //constantes para verificação do intervalo do dia\r\n    firstDaytimePosition: 0,\r\n    lastDaytimePosition: 0,\r\n    //constantes de estado do gráfico\r\n    isTempActive: true,\r\n    isHumiActive: false,\r\n    isUVActive: true,\r\n    is30sActive: false,\r\n    is1mActive: false,\r\n    is5mActive: false,\r\n    is15mActive: true,\r\n    is30mActive: false,\r\n    is1hActive: false,\r\n    //dataNow: 'Temperatura',\r\n    timeScaleNow: '15m',\r\n    //chart data para ser plotada no gráfico\r\n    chartData: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: 'Temperatura',\r\n          fontSize: 10,\r\n          id: 'y-axis-left',\r\n          data: [],\r\n          backgroundColor: []\r\n        },\r\n        {\r\n          label: 'Umidade',\r\n          yAxisID: 'y-axis-left',\r\n          data: [],\r\n          backgroundColor: []\r\n        },\r\n        {\r\n          label: 'Índice UV',\r\n          yAxisID: 'y-axis-right',\r\n          data: [],\r\n          backgroundColor: []\r\n        }\r\n      ],\r\n      options: {\r\n        responsive: false,\r\n        maintainAspectRatio: true,\r\n        width: \"100%\",\r\n        scales: {\r\n          xAxes: [{\r\n            stacked: true\r\n          }],\r\n          yAxes: [\r\n            {\r\n              stacked: false,\r\n              position: \"left\",\r\n              id: \"y-axis-left\",\r\n              ticks: {\r\n                beginAtZero: true\r\n              },\r\n              gridLines: {\r\n                 display: false\r\n              }\r\n            },\r\n            {\r\n              stacked: true,\r\n              position: \"right\",\r\n              id: \"y-axis-right\",\r\n              gridLines: {\r\n                 display: false\r\n              }\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //função periódica dos requests\r\n  requestTempHumiUV = () => {\r\n    axios.get('http://143.107.235.2:8000/sensors/files/logsUV/log-' + this.dataDateRequest() + '.txt')\r\n      .then(response => {\r\n        this.createMatrixUV(response.data);\r\n        this.refreshData();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do histórico de temperatura e umidade');\r\n        console.log(error);\r\n      })\r\n    axios.get('http://143.107.235.2:8000/sensors/files/logs/log-' + this.dataDateRequest() + '.txt')\r\n      .then(response => {\r\n        this.createMatrixTempHumi(response.data);\r\n        this.refreshData();\r\n      })\r\n      .catch(error => {\r\n        console.log('erro com o request do histórico uv');\r\n        console.log(error);\r\n      })\r\n    setTimeout(this.requestTempHumiUV, 30*1000);\r\n  }\r\n  //função para construir a string com a data para os requests do axios\r\n  dataDateRequest = () => {\r\n    const myDate = new Date();\r\n    //verifica-se se o dia e o mês estão entre 1 e 9 para adicionar o 0 antes do dígito\r\n    if (myDate.getDate() < 10) {\r\n      if (myDate.getMonth()+1 < 10) {\r\n        //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n        return('0' + myDate.getDate() + '_0' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n      }\r\n    //verifica-se se somente o dia está entre 1 e 9 para adicionar o 0 antes do dígito\r\n    } else if (myDate.getDate() < 10) {\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return('0' + myDate.getDate() + '_' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    //verifica-se se somente o mês está entre 1 e 9 para adicionar o 0 antes do dígito\r\n    } else if (myDate.getMonth()+1 < 10){\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return(myDate.getDate() + '_0' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    //se nem o dia nem mês estão entre 1 e 9\r\n    } else {\r\n      //soma-se 1 no mês porque janeiro é o mês 0 e dezembro o mês 11\r\n      return(myDate.getDate() + '_' + (myDate.getMonth()+1) + '_' + myDate.getFullYear());\r\n    }\r\n  }\r\n  //função para criar a matriz com os dados de temperatura\r\n  createMatrixTempHumi = (string) => {\r\n    //função para criar a matrix dos dados recebidos da API\r\n    //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\r\n    //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\r\n    this.state.dataMatrixTempHumi = [];\r\n\r\n    //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\r\n    const myString = string.replace(/\\n/g, '\\t');\r\n\r\n    //separamos todos os valores por tabs\r\n    const myArray = myString.split('\\t');\r\n\r\n    //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\r\n    var counter, chunk = 6;\r\n    for (counter = 0; counter < myArray.length; counter += chunk) {\r\n      this.state.dataMatrixTempHumi.push(myArray.slice(counter, counter + chunk));\r\n    }\r\n  }\r\n  //função para criar a matriz com os dados de indice UV\r\n  createMatrixUV = (string) => {\r\n    //função para criar a matrix dos dados recebidos da API\r\n    //ao fazer o GET na API, recebemos uma string com todos os dados. Precisamos transformar em um matriz.\r\n    //primeiro, esvaziamos a matriz, pois ela é atrualizada a cada request\r\n    this.state.dataMatrixUV = [];\r\n\r\n    //o javascript conta o enter (\\n) como um caracter, substituimos esses caracteres por tabs\r\n    const myString = string.replace(/\\n/g, '\\t');\r\n\r\n    //separamos todos os valores por tabs\r\n    const myArray = myString.split('\\t');\r\n\r\n    //criamos vetores de 10 posições, que é o número de colunas da matrix da API, cada posição sendo uma string, os valores\r\n    var counter, chunk = 12;\r\n    for (counter = 0; counter < myArray.length; counter += chunk) {\r\n      this.state.dataMatrixUV.push(myArray.slice(counter, counter + chunk));\r\n    }\r\n  }\r\n  //função para criar os vetores com os dados a serem mostrados de acordo com a escala de tempo\r\n  dataTimeScaleBuilder = (timeScale, dataName) => {\r\n    //matriz importada do state\r\n    var matrix = [];\r\n\r\n    //vetores para receber os valores tratados\r\n    const label = [];\r\n    const data = [];\r\n\r\n    //counter para os for loops\r\n    var counter = 0;\r\n    var column = 0;\r\n\r\n    //primeiro, importamos a matrix com os dados que queremos para trata-la\r\n    if (dataName === 'Temperatura'){\r\n      this.matrix = this.state.dataMatrixTempHumi;\r\n      column = 3;\r\n    }\r\n    else if(dataName === 'Umidade') {\r\n      this.matrix = this.state.dataMatrixTempHumi;\r\n      column = 4;\r\n    }\r\n    else if (dataName === 'UV') {\r\n      this.matrix = this.state.dataMatrixUV;\r\n      column = 3;\r\n    }\r\n    //segundo, vemos qual posição do vetor o sol ja nasceu e qual posição o sol ja se pôs\r\n    //procurando a primeira posição do dia\r\n    counter = 0;\r\n    while (counter <= this.matrix.length-1) {\r\n      if (this.matrix[counter][0].slice(0, 2) >= 5 && this.matrix[counter][0].slice(0, 2) <= 20) {\r\n        this.state.firstDaytimePosition = counter;\r\n        break;\r\n      } else {\r\n        counter++;\r\n      }\r\n    }\r\n    //procurando a última posição do dia\r\n    counter = 0;\r\n    while (counter <= this.matrix.length-1) {\r\n      if (this.matrix[counter][0].slice(0, 2) >= 20 || counter === this.matrix.length-1) {\r\n        this.state.lastDaytimePosition = counter;\r\n        break;\r\n      } else {\r\n        counter++;\r\n      }\r\n    }\r\n    //checando se houve erro na captura dos dados\r\n    if (this.state.firstDaytimePosition === null) {\r\n      console.log(\"erro na captura dos dados: não houve captura durante o dia\");\r\n    } else if (this.state.lastDaytimePosition === null) {\r\n      console.log(\"erro na captura dos dados: não houve captura durante o dia\");\r\n    }\r\n    //terceiro, tratamos os dados de acordo com a escala do tempo\r\n    if (timeScale === '30s') {\r\n      //timeStep é a variável que vai pegar os pontos em um certo intervalo\r\n      //como nossa primeira escala é de 30s, temos que pegar todos os pontos\r\n      const timeStep = 1;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0]);\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '1m') {\r\n      const timeStep = 2;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '5m') {\r\n      const timeStep = 10;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '15m') {\r\n      const timeStep = 30;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '30m') {\r\n      const timeStep = 60;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 5));\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n    else if (timeScale === '1h') {\r\n      const timeStep = 120;\r\n      for (counter = this.state.firstDaytimePosition; counter < Math.min(this.matrix.length-1, this.state.lastDaytimePosition); counter += timeStep) {\r\n        label.push(this.matrix[counter][0].slice(0, 2)+'h');\r\n        data.push(this.matrix[counter][column]);\r\n      }\r\n    }\r\n\r\n    return [label, data];\r\n  }\r\n  //funções para mudar os dados do gráfico\r\n  changeDataTemp = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Temperatura');\r\n\r\n    if (this.state.isTempActive) {\r\n      this.state.chartData.datasets[0].data = [];\r\n      this.state.chartData.datasets[0].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n      this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\r\n    }\r\n\r\n    this.state.isTempActive = !this.state.isTempActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeDataHumi = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Umidade');\r\n\r\n    if (this.state.isHumiActive) {\r\n      this.state.chartData.datasets[1].data = [];\r\n      this.state.chartData.datasets[1].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n      this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.state.dataNow = 'Umidade';\r\n\r\n    this.state.isHumiActive = !this.state.isHumiActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeDataUV = () => {\r\n    const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'UV')\r\n\r\n    if (this.state.isUVActive) {\r\n      this.state.chartData.datasets[2].data = [];\r\n      this.state.chartData.datasets[2].backgroundColor = [];\r\n    } else {\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n      this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.state.dataNow = 'UV';\r\n\r\n    this.state.isUVActive = !this.state.isUVActive;\r\n\r\n    if (this.state.isTempActive === false && this.state.isHumiActive === false && this.state.isUVActive === false) {\r\n      this.state.chartData.labels = [];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n  //funções para mudar a escala de tempo do gráfico\r\n  changeTimeScale30s = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30s', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = true;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '30s';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale1m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = true;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '1m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale5m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('5m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = true;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '5m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale15m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('15m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = true;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '15m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale30m = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('30m', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = true;\r\n    this.state.is1hActive = false;\r\n\r\n    this.state.timeScaleNow = '30m';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  changeTimeScale1h = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n    }\r\n    if (this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder('1h', 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n    }\r\n\r\n    this.state.is30sActive = false;\r\n    this.state.is1mActive = false;\r\n    this.state.is5mActive = false;\r\n    this.state.is15mActive = false;\r\n    this.state.is30mActive = false;\r\n    this.state.is1hActive = true;\r\n\r\n    this.state.timeScaleNow = '1h';\r\n\r\n    this.forceUpdate();\r\n  }\r\n  //função para atualizar o gráfico junto com os requests\r\n  refreshData = () => {\r\n    if (this.state.isTempActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Temperatura');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[0].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[0].label = 'Temperatura';\r\n      this.state.chartData.datasets[0].backgroundColor = ['rgba(255, 0, 0, 0.5)'];\r\n    }\r\n    if(this.state.isHumiActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'Umidade');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[1].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[1].label = 'Umidade';\r\n      this.state.chartData.datasets[1].backgroundColor = ['rgba(0, 0, 255, 0.5)'];\r\n    }\r\n    if (this.state.isUVActive) {\r\n      const returnedValues = this.dataTimeScaleBuilder(this.state.timeScaleNow, 'UV');\r\n\r\n      this.state.chartData.labels = returnedValues[0];\r\n      this.state.chartData.datasets[2].data = returnedValues[1];\r\n\r\n      this.state.chartData.datasets[2].label = 'Índice UV';\r\n      this.state.chartData.datasets[2].backgroundColor = ['rgba(192, 0, 255, 0.5)'];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestTempHumiUV();\r\n  }\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div width=\"10%\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"3\">Medida</th>\r\n                <th colSpan=\"6\">Escala de Tempo</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td><input className={this.state.isTempActive ? 'button-temp-chart' : 'button'} value=\"Temperatura\" type=\"button\" onClick={this.changeDataTemp}/></td>\r\n                <td><input className={this.state.isHumiActive ? 'button-humi-chart' : 'button'} value=\"Umidade\" type=\"button\" onClick={this.changeDataHumi}/></td>\r\n                <td><input className={this.state.isUVActive ? 'button-uv-chart' : 'button'} value=\"Índice UV\" type=\"button\" onClick={this.changeDataUV}/></td>\r\n\r\n                <td><input className={this.state.is30sActive ? 'button-time-chart' : 'button'} value=\"30s\" type=\"button\" onClick={this.changeTimeScale30s}/></td>\r\n                <td><input className={this.state.is1mActive ? 'button-time-chart' : 'button'} value=\"1m\" type=\"button\" onClick={this.changeTimeScale1m}/></td>\r\n                <td><input className={this.state.is5mActive ? 'button-time-chart' : 'button'} value=\"5m\" type=\"button\" onClick={this.changeTimeScale5m}/></td>\r\n                <td><input className={this.state.is15mActive ? 'button-time-chart' : 'button'} value=\"15m\" type=\"button\" onClick={this.changeTimeScale15m}/></td>\r\n                <td><input className={this.state.is30mActive ? 'button-time-chart' : 'button'} value=\"30m\" type=\"button\" onClick={this.changeTimeScale30m}/></td>\r\n                <td><input className={this.state.is1hActive ? 'button-time-chart' : 'button'} value=\"1h\" type=\"button\" onClick={this.changeTimeScale1h}/></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      <ChartComponent chartData={this.state.chartData} />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}